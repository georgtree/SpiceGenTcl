#  .|'''.|            ||                   ..|'''.|                   |''||''|         '||'
#  ||..  '  ... ...  ...    ....    ....  .|'     '    ....  .. ...      ||      ....   ||  
#   ''|||.   ||'  ||  ||  .|   '' .|...|| ||    .... .|...||  ||  ||     ||    .|   ''  ||  
# .     '||  ||    |  ||  ||      ||      '|.    ||  ||       ||  ||     ||    ||       ||  
# |'....|'   ||...'  .||.  '|...'  '|...'  ''|...'|   '|...' .||. ||.   .||.    '|...' .||. 
#            ||                                                                             
#           ''''                                                                            
# specElemsClassesNgspice.test
# Tests Ngspice elements classes
#
# Copyright (c) 2024 George Yashin, georgtree@gmail.com
#
# MIT License
# See the file "LICENSE.txt" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
package require tcltest
namespace import ::tcltest::*
package require SpiceGenTcl
namespace import ::SpiceGenTcl::*
importNgspice

proc testTemplate {testName descr createStr refStr} {
    test $testName $descr -body {
        if {[catch {set inst [{*}$createStr]} errorStr]} {
            return $errorStr
        }
        return [$inst genSPICEString]
    } -result $refStr
}


###  Basic devices tests 

####  Resistor class tests 
    

testTemplate testResistorClass-1 {} {Resistor new 1 netp netm -r 1e3 -tc1 1 -ac 1e6 -temp 25}\
        {r1 netp netm 1e3 tc1=1 ac=1e6 temp=25}
testTemplate testResistorClass-2 {} {Resistor new 1 netp netm -r 1e3} {r1 netp netm 1e3}
testTemplate testResistorClass-3 {} {Resistor new 1 netp netm -r {6*x+y -eq}} {r1 netp netm {6*x+y}}
testTemplate testResistorClass-4 {} {Resistor new 1 netp netm -r {6*x+y -eq} -tc1 7 -tc2 {x^2 -eq}}\
        {r1 netp netm {6*x+y} tc1=7 tc2={x^2}}
testTemplate testResistorClass-5 {} {Resistor new 1 netp netm -r V(a)+V(b)+pow(V(c),2) -beh -tc1 1}\
        {r1 netp netm r={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testResistorClass-6 {} {Resistor new 1 netp netm -r 1 -model resmod -l 1e-6 -temp 25}\
        {r1 netp netm 1 resmod l=1e-6 temp=25}
testTemplate testResistorClass-7 {} {Resistor new 1 netp netm -model resmod -l 1e-6 -temp 25}\
        {r1 netp netm resmod l=1e-6 temp=25}
testTemplate testResistorClass-8 {} {Resistor new 1 netp netm} {Resistor value must be specified with '-r value'}
testTemplate testResistorClass-9 {} {Resistor new 1 netp netm -tc1 1 -r V(a)+V(b)+pow(V(c),2) -beh}\
        {r1 netp netm r={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testResistorClass-10 {} {R new 1 netp netm -r 1e3 -tc1 1 -ac 1e6 -temp 25}\
        {r1 netp netm 1e3 tc1=1 ac=1e6 temp=25}
testTemplate testResistorClass-11 {} {R new 1 netp netm -r V(a)+V(b)+pow(V(c),2) -beh -tc1 1}\
        {r1 netp netm r={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testResistorClass-12 {} {R new 1 netp netm -model resmod -l 1e-6 -temp 25}\
        {r1 netp netm resmod l=1e-6 temp=25}


####  Capacitor class tests 

testTemplate testCapacitorClass-1 {} {Capacitor new 1 netp netm -c {cpar*cpar2 -eq} -tc1 1 -temp 25}\
        {c1 netp netm {cpar*cpar2} tc1=1 temp=25}
testTemplate testCapacitorClass-2 {} {Capacitor new 1 netp netm -c 1e-6} {c1 netp netm 1e-6}
testTemplate testCapacitorClass-3 {} {Capacitor new 1 netp netm -c V(a)+V(b)+pow(V(c),2) -beh -tc1 1}\
        {c1 netp netm c={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testCapacitorClass-4 {} {Capacitor new 1 netp netm -q V(a)+V(b)+pow(V(c),2) -beh -tc1 1}\
        {c1 netp netm q={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testCapacitorClass-5 {} {Capacitor new 1 netp netm -model capmod -l 1e-6 -w 10e-6 -temp 25}\
        {c1 netp netm capmod l=1e-6 w=10e-6 temp=25}
testTemplate testCapacitorClass-6 {} {Capacitor new 1 netp netm -c 1 -model capmod -l 1e-6 -w 10e-6 -temp 25}\
        {c1 netp netm 1 capmod l=1e-6 w=10e-6 temp=25}
testTemplate testCapacitorClass-7 {} {Capacitor new 1 netp netm} {Capacitor value must be specified with '-c value'}
testTemplate testCapacitorClass-8 {} {Capacitor new 1 netp netm -beh} {Capacitor value must be specified with '-c value'}
  

####  C class tests

testTemplate testCClass-1 {} {C new 1 netp netm -c V(a)+V(b)+pow(V(c),2) -beh -tc1 1}\
        {c1 netp netm c={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testCClass-2 {} {C new 1 netp netm -q V(a)+V(b)+pow(V(c),2) -beh -tc1 1}\
        {c1 netp netm q={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testCClass-3 {} {C new 1 netp netm -model capmod -l 1e-6 -w 10e-6 -temp 25}\
        {c1 netp netm capmod l=1e-6 w=10e-6 temp=25}
testTemplate testCClass-4 {} {C new 1 netp netm -c 1e-6 -tc1 1 -temp 25}\
        {c1 netp netm 1e-6 tc1=1 temp=25}


####  Inductor class tests 

testTemplate testInductorClass-1 {} {Inductor new 1 netp netm -l 1e-6 -tc1 1 -temp 25} {l1 netp netm 1e-6 tc1=1 temp=25}
testTemplate testInductorClass-2 {} {Inductor new 1 netp netm -l 1e-6} {l1 netp netm 1e-6}
testTemplate testInductorClass-3 {} {Inductor new 1 netp netm -l 1e-6 -model indm} {l1 netp netm 1e-6 indm}
testTemplate testInductorClass-4 {} {Inductor new 1 netp netm -model indm} {l1 netp netm indm}
testTemplate testInductorClass-5 {} {Inductor new 1 netp netm -l "V(a)+V(b)+pow(V(c),2)" -beh -tc1 1}\
        {l1 netp netm l={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testInductorClass-6 {} {Inductor new 1 netp netm -beh -tc1 1 -l "V(a)+V(b)+pow(V(c),2)"}\
        {l1 netp netm l={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testInductorClass-7 {} {Inductor new 1 netp netm -l l1*l2 -beh -tc1 1} {l1 netp netm l={l1*l2} tc1=1}
testTemplate testInductorClass-8 {} {Inductor new 1 netp netm -l {l1*l2 -eq} -tc1 1} {l1 netp netm {l1*l2} tc1=1}
testTemplate testInductorClass-9 {} {Inductor new 1 netp netm -tc1 1} {Inductor value must be specified with '-l value'}

####  L class tests

testTemplate testLClass-1 {} {L new 1 netp netm -l 1e-6 -tc1 1 -temp 25} {l1 netp netm 1e-6 tc1=1 temp=25}
testTemplate testLClass-2 {} {L new 1 netp netm -l V(a)+V(b)+pow(V(c),2) -beh -tc1 1}\
        {l1 netp netm l={V(a)+V(b)+pow(V(c),2)} tc1=1}
    
####  VSwitch class tests 

testTemplate testVSwitchClass-1 {} {VSwitch new 1 net1 0 netc 0 -model sw1 -on} {s1 net1 0 netc 0 sw1 on}
testTemplate testVSwitchClass-2 {} {VSwitch new 1 net1 0 netc 0 -model sw1} {s1 net1 0 netc 0 sw1}
testTemplate testVSwitchClass-3 {} {VSwitch new 1 net1 0 netc 0 -on -model sw1} {s1 net1 0 netc 0 sw1 on}
testTemplate testVSwitchClass-4 {} {VSwitch new 1 net1 0 netc 0 -model sw1 -on -off} {-on conflicts with -off}
testTemplate testVSwitchClass-5 {} {VSwitch new 1 net1 0 netc 0 -model sw1 -off} {s1 net1 0 netc 0 sw1 off}

####  CSwitch class tests 

testTemplate testCSwitchClass-1 {} {CSwitch new 1 net1 0 -icntrl v1 -model sw1 -on} {w1 net1 0 v1 sw1 on}
testTemplate testCSwitchClass-2 {} {CSwitch new 1 net1 0 -icntrl v1 -model sw1} {w1 net1 0 v1 sw1}
testTemplate testCSwitchClass-3 {} {CSwitch new 1 net1 0 -icntrl v1 -model sw1 -off} {w1 net1 0 v1 sw1 off}

####  W class tests
testTemplate testWClass-1 {} {W new 1 net1 0 -icntrl v1 -model sw1} {w1 net1 0 v1 sw1}
    
###  Sources classes tests 
    
####  Vdc class test 

testTemplate testVdcClass-1 {} {Vdc new 1 netp netm -dc 10} {v1 netp netm 10}
testTemplate testVdcClass-2 {} {Vdc new 1 netp netm -dc {vnom -eq}} {v1 netp netm {vnom}}

####  Vac class test 

testTemplate testVacClass-1 {} {Vac new 1 netp netm -ac 10} {v1 netp netm 0 ac 10}
testTemplate testVacClass-2 {} {Vac new 1 netp netm -dc 1 -ac 10 -acphase 45} {v1 netp netm 1 ac 10 45}
testTemplate testVacClass-3 {} {Vac new 1 netp netm -ac 10 -acphase {phase -eq}} {v1 netp netm 0 ac 10 {phase}}
testTemplate testVacClass-4 {} {Vac new 1 netp netm -ac {acmag -eq} -acphase 45} {v1 netp netm 0 ac {acmag} 45}

####  Vport class test 

testTemplate testVportClass-1 {} {Vport new 1 netp netm -dc 1 -ac 1 -portnum 1 -z0 50}\
        {v1 netp netm dc 1 ac 1 portnum 1 z0 50}
testTemplate testVportClass-2 {} {Vport new 1 netp netm -dc 1 -ac 1 -portnum 1}\
        {v1 netp netm dc 1 ac 1 portnum 1}
testTemplate testVportClass-3 {} {Vport new 1 netp netm -dc 1 -ac 1 -portnum 2 -z0 {z0 -eq}}\
        {v1 netp netm dc 1 ac 1 portnum 2 z0 {z0}}

####  Vpulse class test 

testTemplate testVpulseClass-1 {}\
        {Vpulse new 1 net1 net2 -low 0 -high 1 -td 1e-9 -tr 1e-9 -tf 1e-9 -pw 10e-6 -per 20e-6 -np 10}\
        {v1 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10}
testTemplate testVpulseClass-2 {}\
        {Vpulse new 1 net1 net2 -low 0 -high 1 -td 1e-9 -tr 1e-9 -tf 1e-9 -pw 10e-6 -per 20e-6}\
        {v1 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6}
testTemplate testVpulseClass-3 {}\
        {Vpulse new 1 net1 net2 -low 0 -high 1 -td {td -eq} -tr 1e-9 -tf 1e-9 -pw 10e-6 -per 20e-6}\
        {v1 net1 net2 pulse 0 1 {td} 1e-9 1e-9 10e-6 20e-6}
testTemplate testVpulseClass-4 {}\
        {Vpulse new 1 net1 net2 -low 0 -high 1 -td {td -eq} -tr 1e-9 -tf 1e-9 -pw 10e-6 -per 20e-6 -np {np -eq}}\
        {v1 net1 net2 pulse 0 1 {td} 1e-9 1e-9 10e-6 20e-6 {np}}
testTemplate testVpulseClass-5 {}\
        {Vpulse new 1 net1 net2 -tf 1e-9 -pw 10e-6 -per 20e-6 -np 10 -low 0 -high 1 -td 1e-9 -tr 1e-9}\
        {v1 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10}
testTemplate testVpulseClass-6 {}\
        {Vpulse new 1 net1 net2 -tf 1e-9 -pw 10e-6 -per 20e-6 -np 10 -voff 0 -von 1 -td 1e-9 -tr 1e-9}\
        {v1 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10}
testTemplate testVpulseClass-7 {}\
        {Vpulse new 1 net1 net2 -dc {dc -eq} -ac 0 -tf 1e-9 -pw 10e-6 -per 20e-6 -np 10 -voff 0 -von 1 -td 1e-9 -tr 1e-9}\
        {v1 net1 net2 dc {dc} ac 0 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10}
testTemplate testVpulseClass-8 {}\
        {Vpulse new 1 net1 net2 -ac 0 -acphase 45 -tf 1e-9 -pw 10e-6 -per 20e-6 -np 10 -voff 0 -von 1 -td 1e-9 -tr 1e-9}\
        {v1 net1 net2 ac 0 45 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10}


####  Vsin class test 

testTemplate testVsinClass-1 {} {Vsin new 1 net1 net2 -v0 0 -va 2 -freq 50 -td 1e-6} {v1 net1 net2 sin 0 2 50 1e-6}
testTemplate testVsinClass-2 {} {Vsin new 1 net1 net2 -v0 0 -va 2 -freq 50 -td 1e-6 -theta {theta -eq}}\
        {v1 net1 net2 sin 0 2 50 1e-6 {theta}}
testTemplate testVsinClass-3 {} {Vsin new 1 net1 net2 -v0 0 -va 2 -freq {freq -eq} -td 1e-6 -theta {theta -eq}}\
        {v1 net1 net2 sin 0 2 {freq} 1e-6 {theta}}
testTemplate testVsinClass-4 {} {Vsin new 1 net1 net2 -v0 0 -va 2 -freq 50} {v1 net1 net2 sin 0 2 50}
testTemplate testVsinClass-5 {} {Vsin new 1 net1 net2 -voffset 0 -theta {theta -eq} -va 2 -freq 50 -td 1e-6}\
        {v1 net1 net2 sin 0 2 50 1e-6 {theta}}
testTemplate testVsinClass-6 {} {Vsin new 1 net1 net2 -dc 1 -ac 0 -voffset 0 -theta {theta -eq} -va 2 -freq 50 -td 1e-6}\
        {v1 net1 net2 dc 1 ac 0 sin 0 2 50 1e-6 {theta}}
testTemplate testVsinClass-7 {}\
        {Vsin new 1 net1 net2 -ac 0 -acphase 45 -voffset 0 -theta {theta -eq} -va 2 -freq 50 -td 1e-6}\
        {v1 net1 net2 ac 0 45 sin 0 2 50 1e-6 {theta}}


####  Vexp class test 

testTemplate testVexpClass-1 {} {Vexp new 1 net1 net2 -v1 0 -v2 1 -td1 1e-9 -tau1 1e-9 -td2 1e-9 -tau2 10e-6}\
        {v1 net1 net2 exp 0 1 1e-9 1e-9 1e-9 10e-6}
testTemplate testVexpClass-2 {} {Vexp new 1 net1 net2 -v1 0 -v2 1 -td1 1e-9 -tau1 1e-9 -td2 {td2 -eq} -tau2 10e-6}\
        {v1 net1 net2 exp 0 1 1e-9 1e-9 {td2} 10e-6}
testTemplate testVexpClass-3 {} {Vexp new 1 net1 net2 -v1 0 -tau1 1e-9 -v2 1 -td2 1e-9 -td1 1e-9 -tau2 10e-6}\
        {v1 net1 net2 exp 0 1 1e-9 1e-9 1e-9 10e-6}
testTemplate testVexpClass-4 {} {Vexp new 1 net1 net2 -dc 1 -ac 0 -v1 0 -tau1 1e-9 -v2 1 -td2 1e-9 -td1 1e-9 -tau2 10e-6}\
        {v1 net1 net2 dc 1 ac 0 exp 0 1 1e-9 1e-9 1e-9 10e-6}
testTemplate testVexpClass-5 {}\
        {Vexp new 1 net1 net2 -ac 0 -acphase 45 -v1 0 -tau1 1e-9 -v2 1 -td2 1e-9 -td1 1e-9 -tau2 10e-6}\
        {v1 net1 net2 ac 0 45 exp 0 1 1e-9 1e-9 1e-9 10e-6}

####  Vpwl class test 

testTemplate testVpwlClass-1 {} {Vpwl new 1 npNode nmNode -seq {0 0 {t1 -eq} 1 2 2 3 3 4 4}}\
        {v1 npnode nmnode pwl 0 0 {t1} 1 2 2 3 3 4 4}
testTemplate testVpwlClass-2 {} {Vpwl new 1 npNode nmNode -seq {0 0 {t1 -eq} 1 2 2 3 3 4}}\
        {Number of elements '9' in pwl sequence is odd in element 'v1', must be even}
testTemplate testVpwlClass-3 {} {Vpwl new 1 npNode nmNode -seq {0 0}}\
        {Number of elements '2' in pwl sequence in element 'v1' must be >=4}
testTemplate testVpwlClass-4 {} {Vpwl new 1 npNode nmNode -dc 1 -ac 0 -seq {0 0 {t1 -eq} 1 2 2 3 3 4 4}}\
        {v1 npnode nmnode dc 1 ac 0 pwl 0 0 {t1} 1 2 2 3 3 4 4}
testTemplate testVpwlClass-5 {} {Vpwl new 1 npNode nmNode -ac 0 -acphase 45 -seq {0 0 {t1 -eq} 1 2 2 3 3 4 4}}\
        {v1 npnode nmnode ac 0 45 pwl 0 0 {t1} 1 2 2 3 3 4 4}

####  Vsffm class test 

testTemplate testVsffmClass- {} {Vsffm new 1 net1 net2 -v0 0 -va 1 -fc 1e6 -mdi 0 -fs 1e3 -phasec 45}\
        {v1 net1 net2 sffm 0 1 1e6 0 1e3 45}
testTemplate testVsffmClass- {} {Vsffm new 1 net1 net2 -v0 0 -va 1 -fc 1e6 -mdi 0 -fs 1e3 -phasec {phase -eq}}\
        {v1 net1 net2 sffm 0 1 1e6 0 1e3 {phase}}
testTemplate testVsffmClass- {} {Vsffm new 1 net1 net2 -voff 0 -va 1 -fc {freq -eq} -mdi 0 -fs 1e3 -phasec {phase -eq}}\
        {v1 net1 net2 sffm 0 1 {freq} 0 1e3 {phase}}
testTemplate testVsffmClass- {} {Vsffm new 1 net1 net2 -v0 0 -va 1 -fc 1e6 -mdi 0 -fs 1e3}\
        {v1 net1 net2 sffm 0 1 1e6 0 1e3}
testTemplate testVsffmClass- {} {Vsffm new 1 net1 net2 -v0 0 -fs 1e3 -phasec {phase -eq} -va 1 -fc {freq -eq} -mdi 0}\
        {v1 net1 net2 sffm 0 1 {freq} 0 1e3 {phase}}
testTemplate testVsffmClass- {}\
        {Vsffm new 1 net1 net2 -dc 1 -ac 0 -v0 0 -fs 1e3 -phasec {phase -eq} -va 1 -fc {freq -eq} -mdi 0}\
        {v1 net1 net2 dc 1 ac 0 sffm 0 1 {freq} 0 1e3 {phase}}
testTemplate testVsffmClass- {}\
        {Vsffm new 1 net1 net2 -ac 0 -acphase 45 -dc 1 -ac 0 -v0 0 -fs 1e3 -phasec {phase -eq} -va 1 -fc {freq -eq}\
                 -mdi 0} {v1 net1 net2 dc 1 ac 0 45 sffm 0 1 {freq} 0 1e3 {phase}}

####  Vam class test 

testTemplate testVamClass- {} {Vam new 1 net1 net2 -v0 0 -va 2 -mf 1e3 -fc 5e3 -td 1e-6 -phases 45}\
        {v1 net1 net2 am 0 2 1e3 5e3 1e-6 45}
testTemplate testVamClass- {} {Vam new 1 net1 net2 -v0 0 -va 2 -mf 1e3 -fc 5e3 -td 1e-6 -phases {phase -eq}}\
        {v1 net1 net2 am 0 2 1e3 5e3 1e-6 {phase}}
testTemplate testVamClass- {} {Vam new 1 net1 net2 -v0 0 -va 2 -mf 1e3 -fc {freq -eq} -td 1e-6 -phases {phase -eq}}\
        {v1 net1 net2 am 0 2 1e3 {freq} 1e-6 {phase}}
testTemplate testVamClass- {} {Vam new 1 net1 net2 -v0 0 -va 2 -mf 1e3 -fc 5e3 -td 1e-6}\
        {v1 net1 net2 am 0 2 1e3 5e3 1e-6}
testTemplate testVamClass- {} {Vam new 1 net1 net2 -v0 0 -phases 45 -va 2 -mf 1e3 -td 1e-6 -fc 5e3}\
        {v1 net1 net2 am 0 2 1e3 5e3 1e-6 45}
testTemplate testVamClass- {} {Vam new 1 net1 net2 -dc 1 -ac 0 -v0 0 -phases 45 -va 2 -mf 1e3 -td 1e-6 -fc 5e3}\
        {v1 net1 net2 dc 1 ac 0 am 0 2 1e3 5e3 1e-6 45}
testTemplate testVamClass- {} {Vam new 1 net1 net2 -ac 0 -acphase 45 -v0 0 -phases 45 -va 2 -mf 1e3 -td 1e-6 -fc 5e3}\
        {v1 net1 net2 ac 0 45 am 0 2 1e3 5e3 1e-6 45}
    
####  Idc class test 

testTemplate testIdcClass- {} {Idc new 1 netp netm -dc 10} {i1 netp netm 10}
testTemplate testIdcClass- {} {Idc new 1 netp netm -dc {inom -eq}} {i1 netp netm {inom}}
    
####  Iac class test 

testTemplate testIacClass- {} {Iac new 1 netp netm -ac 10} {i1 netp netm 0 ac 10}
testTemplate testIacClass- {} {Iac new 1 netp netm -ac 10 -acphase 45} {i1 netp netm 0 ac 10 45}
testTemplate testIacClass- {} {Iac new 1 netp netm -ac 10 -acphase {phase -eq}} {i1 netp netm 0 ac 10 {phase}}
testTemplate testIacClass- {} {Iac new 1 netp netm -ac {acmag -eq} -acphase 45} {i1 netp netm 0 ac {acmag} 45}

####  Ipulse class test 

testTemplate testIpulseClass- {}\
        {Ipulse new 1 net1 net2 -low 0 -high 1 -td 1e-9 -tr 1e-9 -tf 1e-9 -pw 10e-6 -per 20e-6 -np 10}\
        {i1 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10}
testTemplate testIpulseClass- {} {Ipulse new 1 net1 net2 -low 0 -high 1 -td 1e-9 -tr 1e-9 -tf 1e-9 -pw 10e-6 -per 20e-6}\
        {i1 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6}
testTemplate testIpulseClass- {}\
        {Ipulse new 1 net1 net2 -low 0 -high 1 -td {td -eq} -tr 1e-9 -tf 1e-9 -pw 10e-6 -per 20e-6}\
        {i1 net1 net2 pulse 0 1 {td} 1e-9 1e-9 10e-6 20e-6}
testTemplate testIpulseClass- {}\
        {Ipulse new 1 net1 net2 -low 0 -high 1 -td {td -eq} -tr 1e-9 -tf 1e-9 -pw 10e-6 -per 20e-6 -np {np -eq}}\
        {i1 net1 net2 pulse 0 1 {td} 1e-9 1e-9 10e-6 20e-6 {np}}
testTemplate testIpulseClass- {}\
        {Ipulse new 1 net1 net2 -tf 1e-9 -pw 10e-6 -per 20e-6 -np 10 -low 0 -high 1 -td 1e-9 -tr 1e-9}\
        {i1 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10}

####  Isin class test 

testTemplate testIsinClass- {} {Isin new 1 net1 net2 -i0 0 -ia 2 -freq 50 -td 1e-6} {i1 net1 net2 sin 0 2 50 1e-6}
testTemplate testIsinClass- {} {Isin new 1 net1 net2 -i0 0 -ia 2 -freq 50 -td 1e-6 -theta {theta -eq}}\
        {i1 net1 net2 sin 0 2 50 1e-6 {theta}}
testTemplate testIsinClass- {} {Isin new 1 net1 net2 -i0 0 -ia 2 -freq {freq -eq} -td 1e-6 -theta {theta -eq}}\
        {i1 net1 net2 sin 0 2 {freq} 1e-6 {theta}}
testTemplate testIsinClass- {} {Isin new 1 net1 net2 -i0 0 -ia 2 -freq 50} {i1 net1 net2 sin 0 2 50}
testTemplate testIsinClass- {} {Isin new 1 net1 net2 -i0 0 -theta {theta -eq} -ia 2 -freq 50 -td 1e-6}\
        {i1 net1 net2 sin 0 2 50 1e-6 {theta}}

####  Iexp class test 

testTemplate testIexpClass- {} {Iexp new 1 net1 net2 -i1 0 -i2 1 -td1 1e-9 -tau1 1e-9 -td2 1e-9 -tau2 10e-6}\
        {i1 net1 net2 exp 0 1 1e-9 1e-9 1e-9 10e-6}
testTemplate testIexpClass- {} {Iexp new 1 net1 net2 -i1 0 -i2 1 -td1 1e-9 -tau1 1e-9 -td2 {td2 -eq} -tau2 10e-6}\
        {i1 net1 net2 exp 0 1 1e-9 1e-9 {td2} 10e-6}
testTemplate testIexpClass- {} {Iexp new 1 net1 net2 -i1 0 -tau1 1e-9 -i2 1 -td2 1e-9 -td1 1e-9 -tau2 10e-6}\
        {i1 net1 net2 exp 0 1 1e-9 1e-9 1e-9 10e-6}
    
####  Ipwl class test 

testTemplate testIpwlClass- {} {Ipwl new 1 npNode nmNode -seq {0 0 {t1 -eq} 1 2 2 3 3 4 4}}\
        {i1 npnode nmnode pwl 0 0 {t1} 1 2 2 3 3 4 4}
testTemplate testIpwlClass- {} {Ipwl new 1 npNode nmNode -seq {0 0 {t1 -eq} 1 2 2 3 3 4}}\
        {Number of elements '9' in pwl sequence is odd in element 'i1', must be even}
testTemplate testIpwlClass- {} {Ipwl new 1 npNode nmNode -seq {0 0}}\
        {Number of elements '2' in pwl sequence in element 'i1' must be >=4}

####  Isffm class test 

testTemplate testIsffmClass- {} {Isffm new 1 net1 net2 -i0 0 -ia 1 -fc 1e6 -mdi 0 -fs 1e3 -phasec 45}\
        {i1 net1 net2 sffm 0 1 1e6 0 1e3 45}
testTemplate testIsffmClass- {} {Isffm new 1 net1 net2 -i0 0 -ia 1 -fc 1e6 -mdi 0 -fs 1e3 -phasec {phase -eq}}\
        {i1 net1 net2 sffm 0 1 1e6 0 1e3 {phase}}
testTemplate testIsffmClass- {} {Isffm new 1 net1 net2 -i0 0 -ia 1 -fc {freq -eq} -mdi 0 -fs 1e3 -phasec {phase -eq}}\
        {i1 net1 net2 sffm 0 1 {freq} 0 1e3 {phase}}
testTemplate testIsffmClass- {} {Isffm new 1 net1 net2 -i0 0 -ia 1 -fc 1e6 -mdi 0 -fs 1e3}\
        {i1 net1 net2 sffm 0 1 1e6 0 1e3}
testTemplate testIsffmClass- {} {Isffm new 1 net1 net2 -i0 0 -fs 1e3 -phasec {phase -eq} -ia 1 -fc {freq -eq} -mdi 0}\
        {i1 net1 net2 sffm 0 1 {freq} 0 1e3 {phase}}

####  Iam class test 

testTemplate testIamClass- {} {Iam new 1 net1 net2 -i0 0 -ia 2 -mf 1e3 -fc 5e3 -td 1e-6 -phases 45}\
        {i1 net1 net2 am 0 2 1e3 5e3 1e-6 45}
testTemplate testIamClass- {} {Iam new 1 net1 net2 -i0 0 -ia 2 -mf 1e3 -fc 5e3 -td 1e-6 -phases {phase -eq}}\
        {i1 net1 net2 am 0 2 1e3 5e3 1e-6 {phase}}
testTemplate testIamClass- {} {Iam new 1 net1 net2 -i0 0 -ia 2 -mf 1e3 -fc {freq -eq} -td 1e-6 -phases {phase -eq}}\
        {i1 net1 net2 am 0 2 1e3 {freq} 1e-6 {phase}}
testTemplate testIamClass- {} {Iam new 1 net1 net2 -i0 0 -ia 2 -mf 1e3 -fc 5e3 -td 1e-6}\
        {i1 net1 net2 am 0 2 1e3 5e3 1e-6}
testTemplate testIamClass- {} {Iam new 1 net1 net2 -i0 0 -phases 45 -ia 2 -mf 1e3 -td 1e-6 -fc 5e3}\
        {i1 net1 net2 am 0 2 1e3 5e3 1e-6 45}
    
####  Vccs class tests 

testTemplate testVccsClass- {} {Vccs new 1 net1 0 netc 0 -trcond 10 -m 1} {g1 net1 0 netc 0 10 m=1}
testTemplate testVccsClass- {} {Vccs new 1 net1 0 netc 0 -trcond 10} {g1 net1 0 netc 0 10}
testTemplate testVccsClass- {} {Vccs new 1 net1 0 netc 0 -trcond {trcond -eq}} {g1 net1 0 netc 0 {trcond}}
testTemplate testVccsClass- {} {Vccs new 1 net1 0 netc 0 -trcond 10 -m {m -eq}} {g1 net1 0 netc 0 10 m={m}}

####  G class tests 

testTemplate testGClass- {} {G new 1 net1 0 netc 0 -trcond 10 -m 1} {g1 net1 0 netc 0 10 m=1}
    
####  Vcvs class tests 

testTemplate testVcvsClass- {} {Vcvs new 1 net1 0 netc 0 -gain 10} {e1 net1 0 netc 0 10}
testTemplate testVcvsClass- {} {Vcvs new 1 net1 0 netc 0 -gain 10} {e1 net1 0 netc 0 10}
testTemplate testVcvsClass- {} {Vcvs new 1 net1 0 netc 0 -gain {vgain -eq}} {e1 net1 0 netc 0 {vgain}}

####  E class tests 

testTemplate testEClass- {} {E new 1 net1 0 netc 0 -gain 10} {e1 net1 0 netc 0 10}
    
####  Cccs class tests 

testTemplate testCccsClass- {} {Cccs new 1 net1 0 -consrc vc -gain 10 -m 1} {f1 net1 0 vc 10 m=1}
testTemplate testCccsClass- {} {Cccs new 1 net1 0 -consrc vc -gain 10} {f1 net1 0 vc 10}
testTemplate testCccsClass- {} {Cccs new 1 net1 0 -consrc vc -gain {gain -eq}} {f1 net1 0 vc {gain}}
testTemplate testCccsClass- {} {Cccs new 1 net1 0 -consrc vc -gain 10 -m {m -eq}} {f1 net1 0 vc 10 m={m}}

####  F class tests 

testTemplate testFClass- {} {F new 1 net1 0 -consrc vc -gain 10 -m 1} {f1 net1 0 vc 10 m=1}
    
####  Ccvs class tests 

testTemplate testCcvsClass- {} {Ccvs new 1 net1 0 -consrc vc -transr 10} {h1 net1 0 vc 10}
testTemplate testCcvsClass- {} {Ccvs new 1 net1 0 -consrc vc -transr 10} {h1 net1 0 vc 10}
testTemplate testCcvsClass- {} {Ccvs new 1 net1 0 -consrc vc -transr {tres -eq}} {h1 net1 0 vc {tres}}

####  H class tests 

testTemplate testHClass- {} {H new 1 net1 0 -consrc vc -transr 10} {h1 net1 0 vc 10}

####  BehaviouralSource class tests 

testTemplate testBehaviouralSourceClass- {} {BehaviouralSource new 1 netp netm -i {V(a)+V(b)+pow(V(c),2)} -tc1 1}\
        {b1 netp netm i={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testBehaviouralSourceClass- {} {BehaviouralSource new 1 netp netm -v {V(a)+V(b)+pow(V(c),2)} -tc1 1}\
        {b1 netp netm v={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testBehaviouralSourceClass- {} {BehaviouralSource new 1 netp netm -tc1 1 -v V(a)+V(b)+pow(V(c),2)}\
        {b1 netp netm v={V(a)+V(b)+pow(V(c),2)} tc1=1}
testTemplate testBehaviouralSourceClass- {} {BehaviouralSource new 1 netp netm -tc1 {tc1 -eq} -v V(a)+V(b)+pow(V(c),2)}\
        {b1 netp netm v={V(a)+V(b)+pow(V(c),2)} tc1={tc1}}
testTemplate testBehaviouralSourceClass- {} {BehaviouralSource new 1 netp netm -tc1 {tc1 -eq}}\
        {Equation must be specified as argument to -i or -v}

####  B class tests 

testTemplate testBClass- {} {B new 1 netp netm -i V(a)+V(b)+pow(V(c),2) -tc1 1}\
        {b1 netp netm i={V(a)+V(b)+pow(V(c),2)} tc1=1}

###  Semiconductor devices classes tests 

####  Diode class tests 

testTemplate testDiodeClass- {} {Diode new 1 netp netm -model diomod -area 1e-3 -lm 1e-6 -temp 25}\
        {d1 netp netm diomod area=1e-3 lm=1e-6 temp=25}

####  D class tests 

testTemplate testDClass- {} {D new 1 netp netm -model diomod -area 1e-3 -lm 1e-6 -temp 25}\
        {d1 netp netm diomod area=1e-3 lm=1e-6 temp=25}
    
####  Bjt class tests 

testTemplate testBjtClass- {} {Bjt new 1 netc netb nete -model bjtmod -area 1e-3 -temp 25}\
        {q1 netc netb nete bjtmod area=1e-3 temp=25}
testTemplate testBjtClass- {} {Bjt new 1 netc netb nete -model bjtmod -ns nets -area 1e-3 -temp 25}\
        {q1 netc netb nete nets bjtmod area=1e-3 temp=25}
testTemplate testBjtClass- {} {Bjt new 1 netc netb nete -model bjtmod -ns nets -tj nettj -area 1e-3 -temp 25}\
        {q1 netc netb nete nets nettj bjtmod area=1e-3 temp=25}
testTemplate testBjtClass- {} {Bjt new 1 netc netb nete -model bjtmod -ns nets -tj nettj -area 1e-3 -temp 25 -ic {1 2}}\
        {q1 netc netb nete nets nettj bjtmod ic=1,2 area=1e-3 temp=25}
testTemplate testBjtClass- {}\
        {Bjt new 1 netc netb nete -model bjtmod -ns nets -tj nettj -area 1e-3 -temp 25 -ic {1 2 3}}\
        {-ic value "1 2 3" fails validation: [llength $arg]==2}

####  Q class tests 

testTemplate testQClass- {} {Q new 1 netc netb nete -model bjtmod -area 1e-3 -temp 25}\
        {q1 netc netb nete bjtmod area=1e-3 temp=25}

####  Jfet class tests 

testTemplate testJfetClass- {} {Jfet new 1 netd netg nets -model jfetmod -area 1e-3 -temp 25}\
        {j1 netd netg nets jfetmod 1e-3 temp=25}
testTemplate testJfetClass- {} {Jfet new 1 netd netg nets -model jfetmod -area {area*area -eq} -temp 25}\
        {j1 netd netg nets jfetmod {area*area} temp=25}
testTemplate testJfetClass- {} {Jfet new 1 netd netg nets -model jfetmod -area 1e-3 -temp 25 -off}\
        {j1 netd netg nets jfetmod 1e-3 off temp=25}
testTemplate testJfetClass- {} {Jfet new 1 netd netg nets -model jfetmod -temp 25}\
        {j1 netd netg nets jfetmod temp=25}

####  J class tests 

testTemplate testJClass- {} {J new 1 netd netg nets -model jfetmod -area {area*2 -eq} -temp 25}\
        {j1 netd netg nets jfetmod {area*2} temp=25}
testTemplate testJClass- {} {J new 1 netd netg nets -model jfetmod -area {area*2 -eq} -temp 25 -ic {1 2}}\
        {j1 netd netg nets jfetmod {area*2} ic=1,2 temp=25}
testTemplate testJClass- {} {J new 1 netd netg nets -model jfetmod -off -area {area*2 -eq} -temp 25 -ic {1 2}}\
        {j1 netd netg nets jfetmod {area*2} off ic=1,2 temp=25}
    
####  Mesfet class tests 

testTemplate testMesfetClass- {} {Mesfet new 1 netd netg nets -model mesfetmod -area 1e-3}\
        {z1 netd netg nets mesfetmod 1e-3}
testTemplate testMesfetClass- {} {Mesfet new 1 netd netg nets -model mesfetmod -area {area -eq} -off -ic {1 2}}\
        {z1 netd netg nets mesfetmod {area} off ic=1,2}
testTemplate testMesfetClass- {} {Mesfet new 1 netd netg nets -model mesfetmod -area 1e-3 -off}\
        {z1 netd netg nets mesfetmod 1e-3 off}
testTemplate testMesfetClass- {} {Mesfet new 1 netd netg nets -model mesfetmod} {z1 netd netg nets mesfetmod}

####  Z class tests 

testTemplate testZClass- {} {Z new 1 netd netg nets -model mesfetmod -area {area*2 -eq}}\
        {z1 netd netg nets mesfetmod {area*2}}

####  Mosfet class tests 

testTemplate testMosfetClass- {} {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3}\
        {m1 netd netg nets mosfetmod l=1e-6 w=10e-3}
testTemplate testMosfetClass- {} {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub}\
        {m1 netd netg nets netsub mosfetmod l=1e-6 w=10e-3}
testTemplate testMosfetClass- {} {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub -n5 net5}\
        {m1 netd netg nets netsub net5 mosfetmod l=1e-6 w=10e-3}
testTemplate testMosfetClass- {}\
        {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub -n5 net5 -n6 net6}\
        {m1 netd netg nets netsub net5 net6 mosfetmod l=1e-6 w=10e-3}
testTemplate testMosfetClass- {}\
        {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub -n5 net5 -n6 net6 -n7 net7}\
        {m1 netd netg nets netsub net5 net6 net7 mosfetmod l=1e-6 w=10e-3}
testTemplate testMosfetClass- {}\
        {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub -n6 net6 -n7 net7} {-n6 requires -n5}
testTemplate testMosfetClass- {}\
        {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n5 net5 -n6 net6 -n7 net7} {-n5 requires -n4}
testTemplate testMosfetClass- {}\
        {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub -n5 net5 -n6 net6 -n7 net7 -ic {1 2 3}}\
        {m1 netd netg nets netsub net5 net6 net7 mosfetmod ic=1,2,3 l=1e-6 w=10e-3}
testTemplate testMosfetClass- {}\
        {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub -n5 net5 -n6 net6 -n7 net7 -ic {1 2 3}\
                 -custparams a 1 b 2 c 3} {m1 netd netg nets netsub net5 net6 net7 mosfetmod ic=1,2,3 l=1e-6 w=10e-3\
                                                   a=1 b=2 c=3}
testTemplate testMosfetClass- {}\
        {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub -n5 net5 -n6 net6 -n7 net7 -ic {1 2 3}\
                 -custparams a 1 b {beq -eq} c 3} {m1 netd netg nets netsub net5 net6 net7 mosfetmod ic=1,2,3 l=1e-6\
                                                           w=10e-3 a=1 b={beq} c=3}
testTemplate testMosfetClass- {}\
        {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -n4 netsub -n5 net5 -n6 net6 -n7 net7 -ic {1 2 3}\
                 -custparams a 1 b {beq -eq} c 3 k} {Custom parameters list must be even length}
testTemplate testMosfetClass- {} {Mosfet new 1 netd netg nets -model mosfetmod -l 1e-6 -w 10e-3 -off}\
        {m1 netd netg nets mosfetmod off l=1e-6 w=10e-3}

####  M class tests 

testTemplate testMClass- {} {M new 1 netd netg nets -model mosfetmod -l 1e-6 -w {w/nf -eq}}\
        {m1 netd netg nets mosfetmod l=1e-6 w={w/nf}}

###  Subcircuits classes tests

####  SubcircuitInstance class tests 

testTemplate testSubcircuitInstanceClass- {}\
        {SubcircuitInstance new 1 {{plus net1} {minus net2}} rcnet {{r 1} {c cpar -eq}}}\
        {x1 net1 net2 rcnet r=1 c={cpar}}

####  X class tests 

testTemplate testXClass- {} {X new 1 {{plus net1} {minus net2}} rcnet {{r 1} {c cpar -eq}}}\
        {x1 net1 net2 rcnet r=1 c={cpar}}

####  SubcircuitInstanceAuto class tests 
    
test testSubcircuitInstanceAutoClass-1 {test creation of SubcircuitInstanceAuto class instance with genSPICEString interface} -setup {
    oo::class create RCnet {
        superclass Subcircuit
        constructor {} {
            # define external pins of subcircuit
            set pins {plus minus}
            # define input parameters of subcircuit
            set params {{r 100} {c 1e-6}}
            # add elements to subcircuit definition
            my add [R new 1 net1 net2 -r {r -eq}]
            my add [C new 1 net2 net3 -c {c -eq}]
            # pass name, list of pins and list of parameters to Subcircuit constructor
            next rcnet $pins $params
        }
    }
    set subcircuit [RCnet new]
} -body {
    set subInst1 [SubcircuitInstanceAuto new $subcircuit 2 {net1 net2} -r 1 -c {cpar -eq}]
    set result [$subInst1 genSPICEString]   
} -result {x2 net1 net2 rcnet r=1 c={cpar}} -cleanup {
    rename RCnet ""
    unset subcircuit subInst1 result
}

test testSubcircuitInstanceAutoClass-2 {test creation of SubcircuitInstanceAuto class instance with wrong number of nodes} -setup {
    oo::class create RCnet {
        superclass Subcircuit
        constructor {} {
            # define external pins of subcircuit
            set pins {plus minus}
            # define input parameters of subcircuit
            set params {{r 100} {c 1e-6}}
            # add elements to subcircuit definition
            my add [R new 1 net1 net2 -r {r -eq}]
            my add [C new 1 net2 net3 -c {c -eq}]
            # pass name, list of pins and list of parameters to Subcircuit constructor
            next rcnet $pins $params
        }
    }
    set subcircuit [RCnet new]
} -body {
    catch {SubcircuitInstanceAuto new $subcircuit 2 {net1 net2 net3} -r 1 -c {cpar -eq}} errorStr
    return $errorStr  
} -result {Wrong number of nodes '3' in definition, should be '2'} -cleanup {
    rename RCnet ""
    unset subcircuit errorStr
}

test testSubcircuitInstanceAutoClass-3 {test creation of SubcircuitInstanceAuto class instance with wrong class of input object} -setup {
    oo::class create RCnet {
        superclass Subcircuit
        constructor {} {
            # define external pins of subcircuit
            set pins {plus minus}
            # define input parameters of subcircuit
            set params {{r 100} {c 1e-6}}
            # add elements to subcircuit definition
            my add [R new 1 net1 net2 -r {r -eq}]
            my add [C new 1 net2 net3 -c {c -eq}]
            # pass name, list of pins and list of parameters to Subcircuit constructor
            next rcnet $pins $params
        }
    }
    set subcircuit [RCnet new]
    set res [R new 1 netp netm -r 1e3 -tc1 1 -ac 1e6 -temp 25]
} -body {
    catch {SubcircuitInstanceAuto new $res 2 {net1 net2 net3} -r 1 -c {cpar -eq}} errorStr
    return $errorStr  
} -result {Wrong object class '::SpiceGenTcl::Ngspice::BasicDevices::R' is passed as subcktObj, should be '::SpiceGenTcl::Subcircuit'} -cleanup {
    rename RCnet ""
    unset subcircuit res errorStr
}

test testSubcircuitInstanceAutoClass-4 {test creation of SubcircuitInstanceAuto class instance with genSPICEString interface without parameters} -setup {
    oo::class create RCnet {
        superclass Subcircuit
        constructor {} {
            # define external pins of subcircuit
            set pins {plus minus}
            # add elements to subcircuit definition
            my add [R new 1 net1 net2 -r {r -eq}]
            my add [C new 1 net2 net3 -c {c -eq}]
            # pass name, list of pins and list of parameters to Subcircuit constructor
            next rcnet $pins ""
        }
    }
    set subcircuit [RCnet new]
} -body {
    set subInst1 [SubcircuitInstanceAuto new $subcircuit 2 {net1 net2}]
    set result [$subInst1 genSPICEString]   
} -result {x2 net1 net2 rcnet} -cleanup {
    rename RCnet ""
    unset subcircuit subInst1 result
}

forgetNgspice

cleanupTests
