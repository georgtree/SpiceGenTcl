#  .|'''.|            ||                   ..|'''.|                   |''||''|         '||'
#  ||..  '  ... ...  ...    ....    ....  .|'     '    ....  .. ...      ||      ....   ||  
#   ''|||.   ||'  ||  ||  .|   '' .|...|| ||    .... .|...||  ||  ||     ||    .|   ''  ||  
# .     '||  ||    |  ||  ||      ||      '|.    ||  ||       ||  ||     ||    ||       ||  
# |'....|'   ||...'  .||.  '|...'  '|...'  ''|...'|   '|...' .||. ||.   .||.    '|...' .||. 
#            ||                                                                             
#           ''''                                                                            
# netlistParserClassNgpice.test
# Tests Ngspice netlist parser class
#
# Copyright (c) 2024 George Yashin, georgtree@gmail.com
#
# MIT License
# See the file "LICENSE.txt" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
package require tcltest
namespace import ::tcltest::*
package require SpiceGenTcl
namespace import ::SpiceGenTcl::*
set currentDir [file normalize [file dirname [info script]]]
source [file join $currentDir .. testUtilities.tcl]
importNgspice

proc testTemplateParse {testName descr location fileName refStr {cleanupList {}}} {
    test $testName $descr -setup {
        set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $location $fileName]]
        $parser readFile
    } -body {
        if {[catch {$parser buildTopNetlist} errorStr]} {
            return $errorStr
        }
        return [[$parser configure -topnetlist] genSPICEString]
    } -result $refStr -cleanup {
        if {$cleanupList ne {}} {
            foreach name $cleanupList {
                rename $name {}
            }
        }
    }
}

proc testTemplateParse1 {testName descr testStr location refStr} {
    test $testName $descr -setup {
        set file [open [file join $location temp1] w+]
        puts $file {}
        puts $file $testStr
        close $file
        set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $location temp1]]
        $parser readFile
    } -body {
        if {[catch {$parser buildTopNetlist} errorStr]} {
            return $errorStr
        }
        return [[$parser configure -topnetlist] genSPICEString]
    } -result $refStr -cleanup {
        file delete [file join $location temp1]
        unset parser
    }
}


set epsilon 1e-8
set testDir [file dirname [info script]]
set netlistsLoc [file join $testDir netlists_parser]

###  NgspiceParser class tests 

test testNgspiceParserClass-1 {test NgspiceParser class} -setup {
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc adder_mos_unmatched_subckt.cir]]
    $parser readFile
} -body {
    catch {[info object namespace $parser]::my GetSubcircuitLines} errorStr
    return $errorStr
} -result {Unclosed .subckt '/fourbit' started at line .subckt fourbit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15} -cleanup {
    unset parser
}

test testNgspiceParserClass-2 {test NgspiceParser class} -setup {
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc adder_mos_unmatched_subckt_1.cir]]
    $parser readFile
} -body {
    catch {[info object namespace $parser]::my GetSubcircuitLines} errorStr
    return $errorStr
} -result {.ends statement without matching .subckt} -cleanup {
    unset parser
}

test testNgspiceParserClass-3 {test NgspiceParser class} -setup {
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc adder_mos_unmatched_subckt_2.cir]]
    $parser readFile
} -body {
    catch {[info object namespace $parser]::my GetSubcircuitLines} errorStr
    return $errorStr
} -result {.ends statement without matching .subckt} -cleanup {
    unset parser
}

test testNgspiceParserClass-4 {test NgspiceParser class with nested subcircuit} -setup {
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc adder_mos_nested_subckt.cir]]
} -body {
    catch {[info object namespace $parser]::my GetSubcircuitLines} errorStr
    return $errorStr
} -result {Parser object 'parser1' doesn't have prepared data} -cleanup {
    unset parser
}

testTemplateParse testNgspiceParserClass-6 {} $netlistsLoc diffpair_cir_build.cir\
{.model qnl npn(level=1 bf=80 rb=100 tf=0.3n tr=6n cje=3p cjc=2p vaf=50)
.model qnr npn(level=1 bf=80 rb=100 tf=0.3n tr=6n cje=3p cjc=2p vaf=50)
.options noacct
q1 4 2 6 qnr
q2 5 3 6 qnl
rs1 11 2 {res}
rs2 3 1 r={v(a)+v(b)/i(b)} tc2=1
rc1 4 8 10k tc1=2 tc2={tcrt}
rc2 5 8 10k
q3 7 7 9 qnl
q4 6 7 9 qnr
rbias 7 8 20k
vcm 1 0 dc 0 ac 1 sin 0 0.1 5meg
vdm 1 11 dc 0 ac 1 sin 0 0.1 5meg
vcc 8 0 12
vee 9 0 -12
.sens v(5,4)}

testTemplateParse testNgspiceParserClass-7 {} $netlistsLoc diffpair_cir_build_res_err_syntax.cir\
".model qnl npn(level=1 bf=80 rb=100 tf=0.3n tr=6n cje=3p cjc=2p vaf=50)
.model qnr npn(level=1 bf=80 rb=100 tf=0.3n tr=6n cje=3p cjc=2p vaf=50)
.options noacct
q1 4 2 6 qnr
q2 5 3 6 qnl
rs1 11 2 {res}
rs2 3 1 r={{v(a)+v(b)/i(b)}}}} tc2=1
rc1 4 8 10k tc1=2 tc2={tcrt}
rc2 5 8 10k
q3 7 7 9 qnl
q4 6 7 9 qnr
rbias 7 8 20k
vcm 1 0 dc 0 ac 1 sin 0 0.1 5meg
vdm 1 11 dc 0 ac 1 sin 0 0.1 5meg
vcc 8 0 12
vee 9 0 -12
.sens v(5,4)"

testTemplateParse testNgspiceParserClass-8 {} $netlistsLoc adder_mos.cir\
{.subckt fourbit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
x1 1 2 3 4 9 10 13 16 15 twobit
x2 5 6 7 8 11 12 16 14 15 twobit
.ends fourbit
.subckt twobit 1 2 3 4 5 6 7 8 9
x1 1 2 7 5 10 9 onebit
x2 3 4 10 6 8 9 onebit
.ends twobit
.subckt onebit 1 2 3 4 5 6
x1 1 2 7 6 nand
x2 1 7 8 6 nand
x3 2 7 9 6 nand
x4 8 9 10 6 nand
x5 3 10 11 6 nand
x6 3 11 12 6 nand
x7 10 11 13 6 nand
x8 12 13 4 6 nand
x9 11 7 5 6 nand
.ends onebit
.subckt nand in1 in2 out vdd
m1 out in2 vdd vdd p1 w=7.5u l=0.35u pd=13.5u ad=22.5p ps=13.5u as=22.5p
m2 net1 in2 0 0 n1 w=3u l=0.35u pd=9u ad=9p ps=9u as=9p
m3 out in1 vdd vdd p1 w=7.5u l=0.35u pd=13.5u ad=22.5p ps=13.5u as=22.5p
m4 out in1 net1 0 n1 w=3u l=0.35u pd=9u ad=9p ps=9u as=9p
.ends nand
vcc 99 0 3.3
vin1a 1 0 dc 0 pulse 0 3 0 5n 5n 20n 50n
vin1b 2 0 dc 0 pulse 0 3 0 5n 5n 30n 100n
vin2a 3 0 dc 0 pulse 0 3 0 5n 5n 50n 200n
vin2b 4 0 dc 0 pulse 0 3 0 5n 5n 90n 400n
vin3a 5 0 dc 0 pulse 0 3 0 5n 5n 170n 800n
vin3b 6 0 dc 0 pulse 0 3 0 5n 5n 330n 1600n
vin4a 7 0 dc 0 pulse 0 3 0 5n 5n 650n 3200n
vin4b 8 0 dc 0 pulse 0 3 0 5n 5n 1290n 6400n
x1 1 2 3 4 5 6 7 8 9 10 11 12 0 13 99 fourbit
.options noinit acct
.tran 500p 6400n
.model n1 nmosmodel(level=49 version=3.3)
.model p1 pmosmodel(level=49 version=3.3)} {Fourbit Twobit Onebit Nand NmosModel PmosModel}

testTemplateParse testNgspiceParserClass-9 {} $netlistsLoc ring51_40.sp\
{.subckt inv25 dd ss sub in out
xinv1 dd ss sub in 1 inv5
xinv2 dd ss sub 1 2 inv5
xinv3 dd ss sub 2 3 inv5
xinv4 dd ss sub 3 4 inv5
xinv5 dd ss sub 4 out inv5
.ends inv25
.subckt inv5 dd ss sub in out
xinv1 dd ss sub in 1 inv1
xinv2 dd ss sub 1 2 inv1
xinv3 dd ss sub 2 3 inv1
xinv4 dd ss sub 3 4 inv1
xinv5 dd ss sub 4 out inv1
.ends inv5
.subckt inv1 dd ss sub in out
mn1 out in ss sub n1 w=4u l=0.15u as=6p ad=6p ps=7u pd=7u
mp1 out in dd sub p1 w=10u l=0.15u as=15p ad=15p ps=13u pd=13u
.ends inv1
vin in out dc 2 pulse 2 0 0.1n 5n 1 1 1
vdd dd 0 dc 0 pulse 0 1.5 0 1n 1 1 1
vss ss 0 0
ve sub 0 0
vn n1 0 0
xinv1 dd ss sub in out25 inv25
xinv2 dd ss sub out25 out50 inv25
xinv5 dd ss sub out50 out inv1
xinv11 dd ss sub out buf inv1
cout buf ss 1pf
.options reltol=1e-4
.tran 0.2n 16n
.include ./bsim4soi/nmos4p0.mod
.include ./bsim4soi/pmos4p0.mod} {Inv25 Inv5 Inv1}

testTemplateParse testNgspiceParserClass-11 {} $netlistsLoc 555-timer-2.cir\
{.subckt ua555 32 30 19 23 33 1 21
q4 25 2 3 qp
q5 0 6 3 qp
q6 6 6 8 qp
r1 9 21 4.7k
r2 3 21 830
r3 8 21 4.7k
q7 2 33 5 qn
q8 2 5 17 qn
q9 6 4 17 qn
q10 6 23 4 qn
q11 12 20 10 qp
r4 10 21 1k
q12 22 11 12 qp
q13 14 13 12 qp
q14 0 32 11 qp
q15 14 18 13 qp
r5 14 0 100k
r6 22 0 100k
r7 17 0 10k
q16 1 15 0 qn
q17 15 19 31 qp
r8 18 23 5k
r9 18 0 5k
r10 21 23 5k
q18 27 20 21 qp
q19 20 20 21 qp
r11 20 31 5k
d1 31 24 da
q20 24 25 0 qn
q21 25 22 0 qn
q22 27 24 0 qn
r12 25 27 4.7k
r13 21 29 6.8k
q23 21 29 28 qn
q24 29 27 16 qn
q25 30 26 0 qn
q26 21 28 30 qn
d2 30 29 da
r14 16 15 100
r15 16 26 220
r16 16 0 4.7k
r17 28 30 3.9k
q3 2 2 9 qp
.model da d(rs=40 is=1.0e-14 cjo=1pf)
.model qp pnp(level=1 bf=20 br=0.02 rc=4 rb=25 is=1.0e-14 va=50 ne=2 cje=12.4p vje=1.1 mje=.5 cjc=4.02p vjc=.3 mjc=.3 tf=229p tr=159n)
.model qn npn(level=1 is=5.07f nf=1 bf=100 vaf=161 ikf=30m ise=3.9p ne=2 br=4 nr=1 var=16 ikr=45m re=1.03 rb=4.12 rc=.412 xtb=1.5 cje=12.4p vje=1.1 mje=.5 cjc=4.02p vjc=.3 mjc=.3 tf=229p tr=959p)
.ends ua555
.include TLC555.LIB
.tran 10u 100ms
v2 2 0 5
vreset res 0 dc 0 pulse 0 5 1u 1u 1u 30m 50m
r3 2 3 1k
r4 3 4 5k
c3 4 0 0.5u
x2 4 1 res 6 4 3 2 ua555
ra 2 17 1k
rb 17 16 5k
c 16 0 0.5u
rl 2 13 1k
x1 16 15 16 res 13 17 2 0 tlc555} {Ua555}

testTemplateParse testNgspiceParserClass-12 {} $netlistsLoc adder_mos_nested_subckt.cir\
{.subckt fourbit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
x1 1 2 3 4 9 10 13 16 15 twobit
x2 5 6 7 8 11 12 16 14 15 twobit
.ends fourbit
.subckt twobit 1 2 3 4 5 6 7 8 9
x1 1 2 7 5 10 9 onebit
x2 3 4 10 6 8 9 onebit
.ends twobit
.subckt onebit 1 2 3 4 5 6
.subckt nand in1 in2 out vdd
m1 out in2 vdd vdd p1 w=7.5u l=0.35u pd=13.5u ad=22.5p ps=13.5u as=22.5p
m2 net.1 in2 0 0 n1 w=3u l=0.35u pd=9u ad=9p ps=9u as=9p
m3 out in1 vdd vdd p1 w=7.5u l=0.35u pd=13.5u ad=22.5p ps=13.5u as=22.5p
m4 out in1 net.1 0 n1 w=3u l=0.35u pd=9u ad=9p ps=9u as=9p
.ends nand
x1 1 2 7 6 nand
x2 1 7 8 6 nand
x3 2 7 9 6 nand
x4 8 9 10 6 nand
x5 3 10 11 6 nand
x6 3 11 12 6 nand
x7 10 11 13 6 nand
x8 12 13 4 6 nand
x9 11 7 5 6 nand
.ends onebit
vcc 99 0 3.3v
vin1a 1 0 dc 0 pulse 0 3 0 5ns 5ns 20ns 50ns
vin1b 2 0 dc 0 pulse 0 3 0 5ns 5ns 30ns 100ns
vin2a 3 0 dc 0 pulse 0 3 0 5ns 5ns 50ns 200ns
vin2b 4 0 dc 0 pulse 0 3 0 5ns 5ns 90ns 400ns
vin3a 5 0 dc 0 pulse 0 3 0 5ns 5ns 170ns 800ns
vin3b 6 0 dc 0 pulse 0 3 0 5ns 5ns 330ns 1600ns
vin4a 7 0 dc 0 pulse 0 3 0 5ns 5ns 650ns 3200ns
vin4b 8 0 dc 0 pulse 0 3 0 5ns 5ns 1290ns 6400ns
x1 1 2 3 4 5 6 7 8 9 10 11 12 0 13 99 fourbit
.options noinit acct
.tran 500p 6400ns
.model n1 nmosmodel(level=49 version=3.3)
.model p1 pmosmodel(level=49 version=3.3)} {Fourbit Twobit Onebit NmosModel PmosModel}

### Resistors parsing test

testTemplateParse testNgspiceParserClassResistors-1 {} $netlistsLoc resistors_test.cir\
{rs1 11 2 {res}
rs2 3 1 r={v(a) +v(b)/ i(b )} tc2=1
rc1 4 8 10k tc1=2 tc2={tcrt}
rc2 5 8 10k
rc3 9 2 10k res1
rc4 4 5 res1 l={l1} w=2u
rc5 4 5 {rpar} res1 l={l1} w=2u
rb1 netp netm resmod l=1e-6 temp=25
r1 3 1 r={v(a) +v(b)/ i(b)} tc2=1
r2 3 1 r={v(a) +v(b)/ i(b)} tc2=1
r3 rr 0 r={v(rr) < {vt} ? {r0} : {2*r0}} tc1=2e-03 tc2=3.3e-06}

testTemplateParse1 testNgspiceParserClassResistors-2 {} {rs2 3 1 3 r={v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Parameter '3' parsing failed}
testTemplateParse1 testNgspiceParserClassResistors-3 {} {rs2 3 1 n r={v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Parameter 'n' parsing failed}
testTemplateParse1 testNgspiceParserClassResistors-4 {} {rs2 3 1 beh={v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Creating resistor object from line 'rs2 3 1 beh={v(a)+v(b)/i(b)} tc2=1' failed due to wrong or incompatible\
                 syntax}
testTemplateParse1 testNgspiceParserClassResistors-5 {} {rs2 a b ! {v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Creating resistor object from line 'rs2 a b ! {v(a)+v(b)/i(b)} tc2=1' failed due to wrong or incompatible\
                 syntax}
testTemplateParse1 testNgspiceParserClassResistors-6 {} {rs2 a b {v} {v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Parameter '{v(a)+v(b)/i(b)}' parsing failed}
testTemplateParse1 testNgspiceParserClassResistors-7 {} {rb1 netp netm 1e!6 resmod temp=25} $netlistsLoc\
        {Creating resistor object from line 'rb1 netp netm 1e!6 resmod temp=25' failed due to wrong or incompatible\
                 syntax}

### Capacitors parsing test

testTemplateParse testNgspiceParserClassCapacitors-1 {} $netlistsLoc capacitors_test.cir\
{c2 netp netm 1e-6
c3 netp netm c={v(a)+v(b)+pow(v(c), 2)} tc1=1
c4 netp netm q={v(a)+v(b) + pow(v(c),2)} tc1=1
c5 netp netm capmod l=1e-6 w=10e-6 temp=25
c9 netp netm 1e-6 capmod w=10e-6 temp=25
c10 netp netm {cap} capmod w=10e-6 temp=25
c1 netp netm 1e-6 tc1=1 temp=25
c6 netp netm q={v(a)+v(b) + pow(v(c),2)} tc1=1 tc2=3
c7 netp netm c={v(a)+v(b) + pow(v(c),2)} tc1=1 tc2=3}
testTemplateParse1 testNgspiceParserClassCapacitors-2 {} {cs2 3 1 3 c={v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Parameter '3' parsing failed}
testTemplateParse1 testNgspiceParserClassCapacitors-3 {} {cs2 3 1 n c={v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Parameter 'n' parsing failed}
testTemplateParse1 testNgspiceParserClassCapacitors-4 {}\
        {cs2 3 1 beh={v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Creating capacitor object from line 'cs2 3 1 beh={v(a)+v(b)/i(b)} tc2=1' failed due to wrong or incompatible\
                 syntax}
testTemplateParse1 testNgspiceParserClassCapacitors-5 {}\
        {cs2 a b ! {v(a)+v(b)/i(b)} tc2=1} $netlistsLoc {Creating capacitor object from line 'cs2 a b !\
                                                                 {v(a)+v(b)/i(b)} tc2=1' failed due to wrong or\
                                                                 incompatible syntax}
testTemplateParse1 testNgspiceParserClassCapacitors-6 {} {cs2 a b {v} {v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Parameter '{v(a)+v(b)/i(b)}' parsing failed}
testTemplateParse1 testNgspiceParserClassCapacitors-7 {} {c9 netp netm 1e-!6 capmod w=10e-6 temp=25} $netlistsLoc\
        {Creating capacitor object from line 'c9 netp netm 1e-!6 capmod w=10e-6 temp=25' failed due to wrong or\
                 incompatible syntax}

### Inductors parsing test

testTemplateParse testNgspiceParserClassInductors-1 {} $netlistsLoc inductors_test.cir\
{l1 netp netm 1e-6 tc1=1 temp=25
l2 netp netm 1e-6
l3 netp netm 1e-6 indm
l10 netp netm {lind} indm
l4 netp netm indm
l5 netp netm l={v(a)+v(b)+ pow(v(c), 2)} tc1=1
l6 netp netm {l1*l2} tc1=1
l7 netp netm l={v(a)+v(b)+ pow(v(c), 2)} tc1=1
l8 netp netm l={v(a)+v(b)+ pow(v(c), 2)} tc1=1
l9 l2 lll l={i(vm) < {it} ? {ll} : {lh}} tc1=-4e-03 tc2=6e-05}

testTemplateParse1 testNgspiceParserClassInductors-2 {} {ls2 3 1 3 l={v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Parameter '3' parsing failed}
testTemplateParse1 testNgspiceParserClassInductors-3 {} {ls2 3 1 beh={v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Creating inductor object from line 'ls2 3 1 beh={v(a)+v(b)/i(b)} tc2=1' failed due to wrong or incompatible\
                 syntax}
testTemplateParse1 testNgspiceParserClassInductors-4 {} {ls2 a b ! {v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Creating inductor object from line 'ls2 a b ! {v(a)+v(b)/i(b)} tc2=1' failed due to wrong or incompatible\
                 syntax}
testTemplateParse1 testNgspiceParserClassInductors-5 {} {ls2 a b {v} {v(a)+v(b)/i(b)} tc2=1} $netlistsLoc\
        {Parameter '{v(a)+v(b)/i(b)}' parsing failed}
testTemplateParse1 testNgspiceParserClassInductors-6 {} {l3 netp netm 1e-!6 indm} $netlistsLoc\
        {Creating inductor object from line 'l3 netp netm 1e-!6 indm' failed due to wrong or incompatible syntax}

### Models parsing test

testTemplateParse testNgspiceParserClassModels-1 {} $netlistsLoc models_test.cir\
{.model resmod r(tc1=1 tc2=2)
.model capmod c(tc1=1 tc2=2)
.model indmod l(tc1=1 tc2=2)
.model swmod sw(vt=1 vh=0.5 ron=1 roff=1e6)
.model cswmod csw(it=1 ih=0.5 ron=1 roff=1e6)
.model diodemod d(is=1e-14 n=1.2 rs=0.01 cjo=1e-9)
.model bjtmod npn(level=1 is=1e-15 bf=200 vaf=100 cje=1e-10)
.model bjtmod1 npnmodel(level=4 is=1e-15 bf=200 vaf=100 cje=1e-10)
.model jfetmod1 njf(level=1 vto=2 beta=1e-3 lambda=1e-4 cgd=1e-12)
.model jfetmod2 njf(level=1 vto=2 beta=1e-3 lambda=1e-4 cgd=1e-12)
.model jfetmod3 njf(level=2 vto=-2 beta=10e-4 rs=1e-4 vbi=1.2)
.model mesfetmod1 nmf(level=1 vto=2 beta=1e-3 lambda=1e-4 cgd=1e-12)
.model mesfetmod2 pmf(level=1 vto=-2 beta=1e-3 lambda=1e-4 cgd=1e-12)
.model res3mod r3model(tc1=1 tc2=2)} {R3Model}

testTemplateParse1 testNgspiceParserClassModels-2 {} {.model swmod sw(vt= vh=0.5 ron=1 roff=1e6)} $netlistsLoc\
        {Parameter 'vt=vh=0.5' parsing failed}

test testNgspiceParserClassModels-3 {test NgspiceParser class, models parsing, edge case} -setup {
    set file [open [file join $netlistsLoc temp1] w+]
    puts $file ""
    puts $file {.model mesfetmod3 nmf(level=4 vto=2 beta=1e-3 lambda=1e-4 cgd=1e-12)}
    close $file
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc temp1]]
    $parser readFile
    stdout2var output
    $parser buildTopNetlist
    restorestdout
} -body {
    return $output
} -result {Level '4' of MESFET in line '.model mesfetmod3 nmf level=4 vto=2 beta=1e-3 lambda=1e-4 cgd=1e-12' is not\
                   supported, skip that line} -cleanup {
    file delete [file join $netlistsLoc temp1]
    unset parser output
}

test testNgspiceParserClassModels-4 {test NgspiceParser class, models parsing, edge case} -setup {
    set file [open [file join $netlistsLoc temp1] w+]
    puts $file ""
    puts $file {.model res3mod r3(tc1=1 tc2=2)}
    close $file
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc temp1]]
    $parser readFile
    stdout2var output
    $parser buildTopNetlist
    restorestdout
} -body {
    return $output
} -result {Model type 'r3' is not in the list of supported types, custom type 'R3Model' was created} -cleanup {
    file delete [file join $netlistsLoc temp1]
    unset parser output
    rename R3Model {}
}

testTemplateParse1 testNgspiceParserClassModels-5 {} {.model sw@mod sw(vt= vh=0.5 ron=1 roff=1e6)} $netlistsLoc\
        {Model name 'sw@mod' contains illegal characters}

test testNgspiceParserClassModels-6 {} -setup {
    set file [open [file join $netlistsLoc temp1] w+]
    puts $file ""
    puts $file {.model bjtmod npn(level=10)}
    close $file
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc temp1]]
    $parser readFile
    stdout2var output
    $parser buildTopNetlist
    restorestdout
} -body {
    return $output
} -result {Level '10' of BJT model in line '.model bjtmod npn level=10' is not supported, skip that line} -cleanup {
    file delete [file join $netlistsLoc temp1]
    unset parser output
}

test testNgspiceParserClassModels-7 {} -setup {
    set file [open [file join $netlistsLoc temp1] w+]
    puts $file ""
    puts $file {.model jfetmod njf(level=10)}
    close $file
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc temp1]]
    $parser readFile
    stdout2var output
    $parser buildTopNetlist
    restorestdout
} -body {
    return $output
} -result {Level '10' of JFET model in line '.model jfetmod njf level=10' is not supported, skip that line} -cleanup {
    file delete [file join $netlistsLoc temp1]
    unset parser output
}

### Analyses parsing test

testTemplateParse testNgspiceParserClassAnalyses-1 {} $netlistsLoc analyses_test.cir\
{.dc v1 {time1} 5 0.1
.dc v1 0 5 0.1
.ac dec 10 {f1} 1e6
.ac lin 1000 1 1e6
.sp dec 10 {f1} 1e6
.sp lin 1000 1 1e6
.sp lin 1000 1 1e6 1
.sens v(1,out) ac dec 10 {f1} 1e6
.sens v(1,out) ac dec 10 1 1e6
.sens v(1,out) ac dec 10 1 1e6
.sens i(1,out)
.tran 1e-6 1e-3 0.1e-6 uic
.tran 1e-6 {tend} uic
.op}

testTemplateParse1 testNgspiceParserClassAnalyses-2 {} {.sens v(1, out) sp dec 10 {f1} 1e6} $netlistsLoc\
        {Sense analysis has usupported type 'sp'}
testTemplateParse1 testNgspiceParserClassAnalyses-3 {} {.sens v(1,out ac dec 10 {f1} 1e6} $netlistsLoc\
        {Sense analysis in line '.sens v(1,out ac dec 10 {f1} 1e6' doesn't have output variable with proper syntax}

test testNgspiceParserClassAnalyses-4 {test NgspiceParser class, analyses parsing, edge case} -setup {
    set file [open [file join $netlistsLoc temp1] w+]
    puts $file ""
    puts $file {.dc v1 1 0 100 v2 2 50 200}
    close $file
    set parser [::SpiceGenTcl::Ngspice::NgspiceParser new parser1 [file join $netlistsLoc temp1]]
    $parser readFile
    stdout2var output
    $parser buildTopNetlist
    restorestdout
} -body {
    return $output
} -result {DC analysis with multiple sources is not supported in SpiceGenTcl, skip the other sources in line '.dc v1 1\
                   0 100 v2 2 50 200'} -cleanup {
    file delete [file join $netlistsLoc temp1]
    unset parser output
}

testTemplateParse1 testNgspiceParserClassAnalyses-5 {} {.sens a(1, out) ac dec 10 {f1} 1e6} $netlistsLoc\
        {Sense analysis in line '.sens a(1, out) ac dec 10 {f1} 1e6' doesn't have output variable with proper\
                 syntax}

### ParamStatement parsing test

testTemplateParse testNgspiceParserClassParamStatement-1 {} $netlistsLoc params_test.cir\
{.param u0t={rf+1} vth0=10
.param k1=1e-4 vth0=10 u0t={rf+1}
.param abv=1 tre=1k pre=1meg}

### Behavioural source parsing test

testTemplateParse testNgspiceParserClassBsource-1 {} $netlistsLoc bsources_test.cir\
{b1 netp netm i={v(a)+v(b)+pow(v(c),2)} tc1=1
b2 netp netm v={v(a)+v(b)+ pow(v(c),2)} tc1=1 tc2=2
b3 0 1 v={ln (cos(log(v(1,2)^2)))-v(3)^4+v(2)^v(1)}
b4 3 4 v={exp(pi^i(vdd))}
b5 3 4 i={17}
b6 4 7 v={a + b/c}
b7 4 7 v={a^2 + b/c} tc1=2
b8 0 8 i={a^2+1}
b9 4 7 v={a^2 + b/c} tc1=2
b10 2 0 v={v(1) < vlow ? vlow : v(1) > {vhigh} ? {vhigh} : v(1)}}

testTemplateParse1 testNgspiceParserClassBsource-2 {} {b1 netp netm g={v(a)+v(b)+pow(v(c),2)} tc1=1} $netlistsLoc\
        {Creating behavioural source object from line 'b1 netp netm g={v(a)+v(b)+pow(v(c),2)} tc1=1' failed due to\
                 wrong or incompatible syntax}
testTemplateParse1 testNgspiceParserClassBsource-3 {} {b1 netp netm v={v(a)+v(b)+pow(v(c),2)} i={15} tc1=1} $netlistsLoc\
        {-i conflicts with -v}

### Linear controlled sources parsing test

testTemplateParse testNgspiceParserClassLctrlsources-1 {} $netlistsLoc lctrlsources_test.cir\
{g1 2 0 5 0 0.1 m={m}
g2 2 0 5 0 {value} m={m}
e1 2 3 14 1 2.0
e2 2 3 14 1 {value}
f1 13 5 vsens 5
f2 13 5 vsens {value}
h1 5 17 vz 0.5k
h2 5 17 vz {value}}

testTemplateParse1 testNgspiceParserClassLctrlsources-2 {} {E1 2 3 14 1 2.!0} $netlistsLoc\
        {Creating VCVS object from line 'e1 2 3 14 1 2.!0' failed due to wrong or incompatible syntax}
testTemplateParse1 testNgspiceParserClassLctrlsources-3 {} {F1 13 5 VSENS !5 m=2} $netlistsLoc\
        {Creating CCCS object from line 'f1 13 5 vsens !5 m=2' failed due to wrong or incompatible syntax}
testTemplateParse1 testNgspiceParserClassLctrlsources-4 {} {G1 2 0 5 0 0!.1 m={m}} $netlistsLoc\
        {Creating VCCS object from line 'g1 2 0 5 0 0!.1 m={m}' failed due to wrong or incompatible syntax}
testTemplateParse1 testNgspiceParserClassLctrlsources-5 {} {H1 5 17 VZ 0.!5K} $netlistsLoc\
        {Creating CCVS object from line 'h1 5 17 vz 0.!5k' failed due to wrong or incompatible syntax}

### Independent sources parsing test

testTemplateParse testNgspiceParserClassIndsources-1 {} $netlistsLoc indsources_test.cir\
{v1 10 0 6
i2 10 0 6
v3 10 0 {dc} ac 1
i4 10 0 6 ac 1 {acphase}
v5 10 0 6 ac 1
v50 10 0 6 ac {acval}
i6 10 0 6 ac 1 -45
v7 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10
i8 net1 net2 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6
v9 net1 net2 pulse 0 1 {td} 1e-9 1e-9 10e-6 20e-6
i10 net1 net2 pulse 0 1 {td} 1e-9 1e-9 10e-6 20e-6 {np}
v11 net1 net2 dc {dc} ac 0 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10
i12 net1 net2 ac 0 45 pulse 0 1 1e-9 1e-9 1e-9 10e-6 20e-6 10
v14 net1 net2 sin 0 2 50 1e-6
i15 net1 net2 sin 0 2 50 1e-6 {theta}
v16 net1 net2 sin 0 2 {freq} 1e-6 {theta}
i17 net1 net2 sin 0 2 50
v18 net1 net2 sin 0 2 50 1e-6 {theta}
i19 net1 net2 dc {ab} ac 0 sin 0 2 50 1e-6 {theta}
v20 net1 net2 ac 0 45 sin 0 2 50 1e-6 {theta}
i21 net1 net2 exp 0 1 1e-9 1e-9 1e-9 10e-6
v22 net1 net2 exp 0 1 1e-9 1e-9 {td2} 10e-6
i23 net1 net2 exp 0 1 1e-9 1e-9 1e-9 10e-6
v24 net1 net2 dc 1 ac 0 exp 0 1 1e-9 1e-9 1e-9 10e-6
i25 net1 net2 ac 0 45 exp 0 1 1e-9 1e-9 1e-9 10e-6
v26 npnode nmnode pwl 0 0 {t1} 1 2 2 3 3 4 4
i27 npnode nmnode dc 1 ac 0 pwl 0 0 {t1} 1 2 2 3 3 4 4
v28 npnode nmnode ac 0 45 pwl 0 0 {t1} 1 2 2 3 3 4 4
i29 net1 net2 sffm 0 1 1e6 0 1e3 45
v30 net1 net2 sffm 0 1 1e6 0 1e3 {phase}
i31 net1 net2 sffm 0 1 {freq} 0 1e3 {phase}
v32 net1 net2 sffm 0 1 1e6 0 1e3
i33 net1 net2 sffm 0 1 {freq} 0 1e3 {phase}
v34 net1 net2 dc 1 ac 0 sffm 0 1 {freq} 0 1e3 {phase}
i35 net1 net2 dc 1 ac 0 45 sffm 0 1 {freq} 0 1e3 {phase}
v36 net1 net2 am 0 2 1e3 5e3 1e-6 45
i37 net1 net2 am 0 2 1e3 5e3 1e-6 {phase}
v38 net1 net2 am 0 2 1e3 {freq} 1e-6 {phase}
i39 net1 net2 am 0 2 1e3 5e3 1e-6
v40 net1 net2 am 0 2 1e3 5e3 1e-6 45
i41 net1 net2 dc 1 ac 0 am 0 2 1e3 5e3 1e-6 45
v42 net1 net2 ac 0 45 am 0 2 1e3 5e3 1e-6 45
v43 netp netm dc 1 ac 1 portnum 1 z0 50
v44 netp netm dc 1 ac 1 portnum 1
v45 netp netm dc 1 ac 1 portnum 2 z0 {z0}}

testTemplateParse1 testNgspiceParserClassIndsources-2 {} {i43 netp netm dc 1 ac 1 portnum 1 z0 50} $netlistsLoc\
        {RF port could be only voltage type in line 'i43 netp netm dc 1 ac 1 portnum 1 z0 50'}

### Diodes parsing test

testTemplateParse testNgspiceParserClassDiodes-1 {} $netlistsLoc diodes_test.cir\
{d1 netp netm diomod area=1e-3 lm=1e-6 temp=25
d2 netp netm diomod off area=1e-3 lm=1e-6 temp=25
d3 netp netm diomod off area={area} lm=1e-6 temp=25}

testTemplateParse1 testNgspiceParserClassDiodes-2 {} {d1 netp netm diom!od} $netlistsLoc\
        {Creating diode object from line 'd1 netp netm diom!od' failed due to wrong or incompatible syntax}

### BJTs parsing test

testTemplateParse testNgspiceParserClassBJTs-1 {} $netlistsLoc bjts_test.cir\
{q1 netc netb nete bjtmod area=1e-3 temp=25
q2 netc netb nete nets bjtmod off area={area} temp=25
q3 netc netb nete nets nettj bjtmod area=1e-3 temp=25
q4 netc netb nete bjtmod
q5 netc netb nete nets bjtmod off
q6 netc netb nete nets nettj bjtmod
q7 netc netb nete nets nettj bjtmod ic=1,2 area=1e-3 temp=25
q8 netc netb nete nets bjtmod ic={a},2 area=1e-3 temp=25
q9 netc netb nete nets nettj bjtmod ic={a},{b} area=1e-3 temp=25}

testTemplateParse1 testNgspiceParserClassBJTs-2 {} {q4 netc netb nete bjt!mod} $netlistsLoc\
        {Creating BJT object from line 'q4 netc netb nete bjt!mod' failed due to wrong or incompatible syntax}

### JFETs parsing test

testTemplateParse testNgspiceParserClassJFETs-1 {} $netlistsLoc jfets_test.cir\
{j1 netd netg nets jfetmod 1e-3 temp=25
j2 netd netg nets jfetmod {area*area} ic={a},5 temp=25
j3 netd netg nets jfetmod 1e-3 off temp=25
j4 netd netg nets jfetmod ic=1,2 temp=25
j5 netd netg nets jfetmod}

testTemplateParse1 testNgspiceParserClassJFETs-2 {} {j5 netd netg nets jf!etmod} $netlistsLoc\
        {Creating JFET object from line 'j5 netd netg nets jf!etmod' failed due to wrong or incompatible syntax}

### MESFETs parsing test

testTemplateParse testNgspiceParserClassMESFETs-1 {} $netlistsLoc mesfets_test.cir\
{z1 netd netg nets mesfetmod 1e-3
z2 netd netg nets mesfetmod {area*area} ic={a},5
z3 netd netg nets mesfetmod 1e-3 off
z4 netd netg nets mesfetmod ic=1,2
z5 netd netg nets mesfetmod}

testTemplateParse1 testNgspiceParserClassMESFETs-2 {} {z1 netd netg nets mesf!etmod 1e-3} $netlistsLoc\
        {Creating MESFET object from line 'z1 netd netg nets mesf!etmod 1e-3' failed due to wrong or incompatible syntax}

### MOSFETs parsing test

testTemplateParse testNgspiceParserClassMOSFETs-1 {} $netlistsLoc mosfets_test.cir\
{m1 netd netg nets mosfetmod l=1e-6 w=10e-3
m2 netd netg nets netsub mosfetmod l=1e-6 w=10e-3
m3 netd netg nets netsub net5 mosfetmod l=1e-6 w=10e-3
m4 netd netg nets netsub net5 net6 mosfetmod l=1e-6 w=10e-3
m5 netd netg nets netsub net5 net6 net7 mosfetmod l=1e-6 w=10e-3
m6 netd netg nets netsub net5 net6 net7 mosfetmod ic=1,2,3 l=1e-6 w=10e-3
m7 netd netg nets netsub net5 net6 net7 mosfetmod ic=1,{a},3 l=1e-6 w=10e-3
m8 netd netg nets netsub net5 net6 net7 mosfetmod ic=1,2,{b} l=1e-6 w=10e-3
m9 netd netg nets mosfetmod off l=1e-6 w=10e-3
m10 netd netg nets mosfetmod}

testTemplateParse1 testNgspiceParserClassMOSFETs-2 {} {m1 netd netg nets mosfe!tmod l=1e-6 w=10e-3} $netlistsLoc\
        {Creating MOSFET object from line 'm1 netd netg nets mosfe!tmod l=1e-6 w=10e-3' failed due to wrong or\
                 incompatible syntax}

### Switches parsing test

testTemplateParse testNgspiceParserClassSwitches-1 {} $netlistsLoc switches_test.cir\
{s1 net1 0 netc 0 sw1 on
s2 net1 0 netc 0 sw1
s3 net1 0 netc 0 sw1 on
s4 net1 0 netc 0 sw1 off
w1 net1 0 v1 sw1 on
w2 net1 0 v1 sw1 off
w3 net1 0 v1 sw1}

### Subcircuits calls parsing test

testTemplateParse testNgspiceParserClassSubcircuits-1 {} $netlistsLoc subckts_calls_test.cir\
{x1 net1 net2 rcnet r=1 c={cpar}
x2 net1 net2 rcnet
x3 a b c d e f g h subname k=1 n=2 i=8 o={oval}}

### Subcircuits definitions parsing test

testTemplateParse testNgspiceParserClassSubcircuitsDefinition-1 {} $netlistsLoc subckts_defs_test.cir\
{.subckt resarr1 in out rs=2 rt=3
r1 in a r={rs}
r2 a out r={rt}
.ends resarr1
.subckt resarr in out rs=2 rt=3
r1 in a r={rs}
r2 a out r={rt}
.ends resarr}

testTemplateParse testNgspiceParserClassSubcircuitsDefinition-2 {} $netlistsLoc deeply_nested_subckt.cir\
{.subckt top in out
.subckt middle1 in out
.subckt inner1 in out
.subckt innerinner1 in out
r4 in c r={30}
.ends innerinner1
r3 in c r={30}
.ends inner1
r2 in b r={20}
r5 b out r={40}
.ends middle1
.subckt middle2 in out
.subckt inner2 in out
r7 in e r={60}
.ends inner2
.subckt inner1 in out
r8 in e r={60}
.ends inner1
r6 in d r={50}
.model res3mod r3model(tc1=1 tc2=2)
r9 d out r={70}
.ends middle2
r1 in a r={10}
r10 a out r={80}
.ends top} {Top}

### Includes and libraries parsing test

testTemplateParse testNgspiceParserClassIncsLibs-1 {} $netlistsLoc incs_libs_test.cir\
{.include ./libs/mosfets/Nmos1
.include './libs/mosfets abv/nmos1'
.lib ./libs/mosfets/nmos1 lib1
.lib './Libs/mosfets abv/nmos1' lib2}

### Nodesets and ics parsing test

testTemplateParse testNgspiceParserClassNodesetsIcs-1 {} $netlistsLoc ic_nodeset_test.cir\
{.ic v(1)=5 v(a)={b} h=1
.nodeset v(1)=5 v(a)={b} h=1}

### Temp parsing test

testTemplateParse1 testNgspiceParserClassTemps-1 {} {.temp 25} $netlistsLoc {.temp 25}
testTemplateParse1 testNgspiceParserClassTemps-2 {} {.temp {tempPar}} $netlistsLoc {.temp {temppar}}

### Global parsing test

testTemplateParse1 testNgspiceParserClassGlobals-1 {} {.global gnd1 gnd2 3} $netlistsLoc {.global gnd1 gnd2 3}

### Coupling parsing test

testTemplateParse1 testNgspiceParserClassCoupling-1 {} {k1 la lb 0.5} $netlistsLoc {k1 la lb 0.5}
testTemplateParse1 testNgspiceParserClassCoupling-2 {} {k1 la lb {kpar}} $netlistsLoc {k1 la lb {kpar}}

### VerilogA parsing test

testTemplateParse testNgspiceParserClassVerilogA-1 {} $netlistsLoc veriloga_instances_tests.cir\
{n1 net1 net2 rcnet r=1 c={cpar}
n2 net1 net2 rcnet
n3 a b c d e f g h subname k=1 n=2 i=8 o={oval}}

forgetNgspice

cleanupTests
