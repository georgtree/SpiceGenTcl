#  .|'''.|            ||                   ..|'''.|                   |''||''|         '||'
#  ||..  '  ... ...  ...    ....    ....  .|'     '    ....  .. ...      ||      ....   ||  
#   ''|||.   ||'  ||  ||  .|   '' .|...|| ||    .... .|...||  ||  ||     ||    .|   ''  ||  
# .     '||  ||    |  ||  ||      ||      '|.    ||  ||       ||  ||     ||    ||       ||  
# |'....|'   ||...'  .||.  '|...'  '|...'  ''|...'|   '|...' .||. ||.   .||.    '|...' .||. 
#            ||                                                                             
#           ''''                                                                            
# specModsClassesXyce.test
# Tests Xyce models classes
#
# Copyright (c) 2024 George Yashin, georgtree@gmail.com
#
# MIT License
# See the file "LICENSE.txt" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
package require tcltest
namespace import ::tcltest::*
package require SpiceGenTcl
namespace import ::SpiceGenTcl::*
set xyceNameSpc [namespace children ::SpiceGenTcl::Xyce]
foreach nameSpc $xyceNameSpc {
    namespace import ${nameSpc}::*
}
    
###  RModel class tests 
    
test testRModelClass-1 {test RModel class} -setup {
    set mod [RModel new resmod -tc1 1 -tc2 2]
} -body {
    set result [$mod genSPICEString]
} -result ".model resmod r(tc1=1 tc2=2)" -cleanup {
    unset mod result
}

###  CModel class tests 
    
test testCModelClass-1 {test CModel class} -setup {
    set mod [CModel new capmod -tc1 1 -tc2 2]
} -body {
    set result [$mod genSPICEString]
} -result ".model capmod c(tc1=1 tc2=2)" -cleanup {
    unset mod result
}

###  LModel class tests 
    
test testLModelClass-1 {test LModel class} -setup {
    set mod [LModel new indmod -tc1 1 -tc2 2]
} -body {
    set result [$mod genSPICEString]
} -result ".model indmod l(tc1=1 tc2=2)" -cleanup {
    unset mod result
}
###  VSwitchModel class tests 
    
test testVSwitchModelClass-1 {test VSwitchModel class} -setup {
    set mod [VSwitchModel new swmod -von 1 -voff 0.5 -ron 1 -roff 1e6]
} -body {
    set result [$mod genSPICEString]
} -result ".model swmod vswitch(von=1 voff=0.5 ron=1 roff=1e6)" -cleanup {
    unset mod result
}

###  CSwitchModel class tests 
    
test testCSwitchModelClass-1 {test CSwitchModel class} -setup {
    set mod [CSwitchModel new cswmod -ion 1 -ioff 0.5 -ron 1 -roff 1e6]
} -body {
    set result [$mod genSPICEString]
} -result ".model cswmod iswitch(ion=1 ioff=0.5 ron=1 roff=1e6)" -cleanup {
    unset mod result
}

###  DiodeModel class tests 
    
test testDiodeModelClass-1 {test DiodeModel class} -setup {
    set mod [DiodeModel new diodemod -is 1e-14 -n 1.2 -rs 0.01 -cjo 1e-9]
} -body {
    set result [$mod genSPICEString]
} -result ".model diodemod d(is=1e-14 n=1.2 rs=0.01 cjo=1e-9)" -cleanup {
    unset mod result
}

###  BjtGPModel class tests 
    
test testBjtGPModelClass-1 {test BjtGPModel class} -setup {
    set mod [BjtGPModel new bjtmod npn -is 1e-15 -bf 200 -vaf 100 -cje 1e-10]
} -body {
    set result [$mod genSPICEString]
} -result ".model bjtmod npn(level=1 is=1e-15 bf=200 vaf=100 cje=1e-10)" -cleanup {
    unset mod result
}

###  Jfet1Model class tests 
    
test testJfet1ModelClass-1 {test Jfet1Model class} -setup {
    set mod [Jfet1Model new jfetmod njf -vto 2 -beta 1e-3 -lambda 1e-4 -cgd 1e-12]
} -body {
    set result [$mod genSPICEString]
} -result ".model jfetmod njf(level=1 vto=2 beta=1e-3 lambda=1e-4 cgd=1e-12)" -cleanup {
    unset mod result
}

###  Jfet2Model class tests 
    
test testJfet2ModelClass-1 {test Jfet2Model class} -setup {
    set mod [Jfet2Model new jfetmod njf -vto -2 -beta 10e-4 -rs 1e-4]
} -body {
    set result [$mod genSPICEString]
} -result ".model jfetmod njf(level=2 vto=-2 beta=10e-4 rs=1e-4)" -cleanup {
    unset mod result
}
    
###  Mesfet1Model class tests 
    
test testMesfet1ModelClass-1 {test Mesfet1Model class} -setup {
    set mod [Mesfet1Model new mesfetmod njf -vto 2 -beta 1e-3 -lambda 1e-4 -cgd 1e-12]
} -body {
    set result [$mod genSPICEString]
} -result ".model mesfetmod njf(level=1 vto=2 beta=1e-3 lambda=1e-4 cgd=1e-12)" -cleanup {
    unset mod result
}

cleanupTests
