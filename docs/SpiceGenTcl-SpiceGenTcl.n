'\"
'\" '\" Copyright (c) George Yashin
'\"
.TH "SpiceGenTcl" 3tcl 0\&.71 "SpiceGenTcl" "Tcl SpiceGenTcl package"
.SH NAME
SpiceGenTcl - Commands in namespace SpiceGenTcl
.SH SYNOPSIS
\fBforgetCommon\fP
.br
\fBforgetLtspice\fP
.br
\fBforgetNgspice\fP
.br
\fBforgetXyce\fP
.br
\fBimportCommon\fP
.br
\fBimportLtspice\fP
.br
\fBimportNgspice\fP
.br
\fBimportXyce\fP
.br
\fBOBJECT constructor\fP \fItype params ?-name value?\fP
.br
\fBANALYSISOBJ destroy\fP
.br
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
\fBANALYSISOBJ genSPICEString\fP
.br
\fBAxis create OBJNAME\fP
.br
\fBAxis new\fP
.br
\fBBinaryReader create OBJNAME\fP
.br
\fBBinaryReader new\fP
.br
\fBBINARYREADEROBJ readComplex\fP \fIfile\fP
.br
\fBBINARYREADEROBJ readFloat32\fP \fIfile\fP
.br
\fBBINARYREADEROBJ readFloat64\fP \fIfile\fP
.br
\fBBINARYREADEROBJ skip4bytes\fP \fIfile\fP
.br
\fBBINARYREADEROBJ skip8bytes\fP \fIfile\fP
.br
\fBBINARYREADEROBJ skip16bytes\fP \fIfile\fP
.br
\fBOBJECT constructor\fP \fIname\fP
.br
\fBOBJECT add\fP \fIelement ?element \&.\&.\&.?\fP
.br
\fBOBJECT del\fP \fIelementName ?elementName \&.\&.\&.?\fP
.br
\fBCIRCUITOBJ detachSimulator\fP \fI?args?\fP
.br
\fBCIRCUITOBJ genSPICEString\fP
.br
\fBOBJECT getDataCsv\fP \fI?-all? ?-traces list? ?-sep value?\fP
.br
\fBCIRCUITOBJ getDataDict\fP \fI?args?\fP
.br
\fBOBJECT runAndRead\fP \fI?-nodelete?\fP
.br
\fBOBJECT constructor\fP \fIvalue ?-name value?\fP
.br
\fBCOMMENTOBJ genSPICEString\fP
.br
\fBDataset create OBJNAME\fP \fI?args?\fP
.br
\fBDataset new\fP \fI?args?\fP
.br
\fBDATASETOBJ appendDataPoints\fP \fIdataPoint\fP
.br
\fBDATASETOBJ getDataPoints\fP \fI?args?\fP
.br
\fBDATASETOBJ getStr\fP
.br
\fBDATASETOBJ setDataPoints\fP \fIdataPoints\fP
.br
\fBDevice create OBJNAME\fP \fI?args?\fP
.br
\fBDevice new\fP \fI?args?\fP
.br
\fBDEVICEOBJ destroy\fP
.br
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
\fBOBJECT actOnPin\fP \fI-add pin node\fP
.br
\fBOBJECT actOnPin\fP \fI-set pin node\fP
.br
\fBOBJECT actOnPin\fP \fI-get pin\fP
.br
\fBOBJECT actOnPin\fP \fI-get -all\fP
.br
\fBDEVICEOBJ checkFloatingPins\fP \fI?args?\fP
.br
\fBDEVICEOBJ genSPICEString\fP
.br
\fBEmptyTrace create OBJNAME\fP
.br
\fBEmptyTrace new\fP
.br
\fBEMPTYTRACEOBJ getDataPoints\fP
.br
\fBOBJECT constructor\fP \fIdeclaration body ?-name value?\fP
.br
\fBFUNCTIONOBJ genSPICEString\fP
.br
\fBOBJECT constructor\fP \fInets ?-name value?\fP
.br
\fBGLOBALOBJ addNets\fP \fI?args?\fP
.br
\fBGLOBALOBJ deleteNet\fP \fI?args?\fP
.br
\fBGLOBALOBJ genSPICEString\fP
.br
\fBOBJECT constructor\fP \fIparams ?-name value?\fP
.br
\fBICOBJ destroy\fP
.br
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
\fBICOBJ genSPICEString\fP
.br
\fBOBJECT constructor\fP \fIvalue ?-name value?\fP
.br
\fBINCLUDEOBJ genSPICEString\fP
.br
\fBOBJECT constructor\fP \fIvalue libvalue ?-name value?\fP
.br
\fBLIBRARYOBJ genSPICEString\fP
.br
\fBModel create OBJNAME\fP \fI?args?\fP
.br
\fBModel new\fP \fI?args?\fP
.br
\fBMODELOBJ destroy\fP
.br
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
\fBMODELOBJ genSPICEString\fP
.br
\fBNetlist create OBJNAME\fP \fI?args?\fP
.br
\fBNetlist new\fP \fI?args?\fP
.br
\fBOBJECT add\fP \fIelement ?element \&.\&.\&.?\fP
.br
\fBOBJECT del\fP \fIelementName ?elementName \&.\&.\&.?\fP
.br
\fBNETLISTOBJ genSPICEString\fP
.br
\fBNETLISTOBJ getAllElemNames\fP \fI?args?\fP
.br
\fBOBJECT getElement\fP \fIelemName\fP
.br
\fBNodeset create OBJNAME\fP
.br
\fBNodeset new\fP
.br
\fBNODESETOBJ genSPICEString\fP
.br
\fBOBJECT constructor\fP \fIparams ?-name value?\fP
.br
\fBOPTIONSOBJ destroy\fP
.br
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
\fBOPTIONSOBJ genSPICEString\fP
.br
\fBParameter create OBJNAME\fP \fI?args?\fP
.br
\fBParameter new\fP \fI?args?\fP
.br
\fBPARAMETEROBJ genSPICEString\fP
.br
\fBParameterDefault create OBJNAME\fP \fI?args?\fP
.br
\fBParameterDefault new\fP \fI?args?\fP
.br
\fBPARAMETERDEFAULTOBJ resetValue\fP \fI?args?\fP
.br
\fBParameterEquation create OBJNAME\fP \fI?args?\fP
.br
\fBParameterEquation new\fP \fI?args?\fP
.br
\fBPARAMETEREQUATIONOBJ genSPICEString\fP
.br
\fBParameterNoCheck create OBJNAME\fP \fI?args?\fP
.br
\fBParameterNoCheck new\fP \fI?args?\fP
.br
\fBParameterNode create OBJNAME\fP \fI?args?\fP
.br
\fBParameterNode new\fP \fI?args?\fP
.br
\fBPARAMETERNODEOBJ genSPICEString\fP
.br
\fBParameterNodeEquation create OBJNAME\fP \fI?args?\fP
.br
\fBParameterNodeEquation new\fP \fI?args?\fP
.br
\fBPARAMETERNODEEQUATIONOBJ genSPICEString\fP
.br
\fBParameterPositional create OBJNAME\fP \fI?args?\fP
.br
\fBParameterPositional new\fP \fI?args?\fP
.br
\fBPARAMETERPOSITIONALOBJ genSPICEString\fP
.br
\fBParameterPositionalEquation create OBJNAME\fP \fI?args?\fP
.br
\fBParameterPositionalEquation new\fP \fI?args?\fP
.br
\fBPARAMETERPOSITIONALEQUATIONOBJ genSPICEString\fP
.br
\fBParameterPositionalNoCheck create OBJNAME\fP \fI?args?\fP
.br
\fBParameterPositionalNoCheck new\fP \fI?args?\fP
.br
\fBPARAMETERPOSITIONALNOCHECKOBJ genSPICEString\fP
.br
\fBParameterSwitch create OBJNAME\fP \fI?args?\fP
.br
\fBParameterSwitch new\fP \fI?args?\fP
.br
\fBPARAMETERSWITCHOBJ genSPICEString\fP
.br
\fBParameterVector create OBJNAME\fP
.br
\fBParameterVector new\fP
.br
\fBOBJECT constructor\fP \fIparams ?-name value?\fP
.br
\fBPARAMSTATEMENTOBJ destroy\fP
.br
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
\fBPARAMSTATEMENTOBJ genSPICEString\fP
.br
\fBParser create OBJNAME\fP \fI?args?\fP
.br
\fBParser new\fP \fI?args?\fP
.br
\fBPARSEROBJ buildTopNetlist\fP \fI?args?\fP
.br
\fBPARSEROBJ readAndParse\fP \fI?args?\fP
.br
\fBPARSEROBJ readFile\fP
.br
\fBOBJECT constructor\fP \fIname node\fP
.br
\fBPINOBJ checkFloating\fP \fI?args?\fP
.br
\fBPINOBJ genSPICEString\fP
.br
\fBPINOBJ unsetNodeName\fP \fI?args?\fP
.br
\fBRawFile create OBJNAME\fP \fI?args?\fP
.br
\fBRawFile new\fP \fI?args?\fP
.br
\fBRAWFILEOBJ destroy\fP
.br
\fBRAWFILEOBJ getCurrentsNames\fP \fI?args?\fP
.br
\fBRAWFILEOBJ getTrace\fP \fItraceName\fP
.br
\fBOBJECT getTracesCsv\fP \fI?-all? ?-traces list? ?-sep value?\fP
.br
\fBRAWFILEOBJ getTracesData\fP \fI?args?\fP
.br
\fBRAWFILEOBJ getTracesStr\fP \fI?args?\fP
.br
\fBRAWFILEOBJ getVariablesNames\fP \fI?args?\fP
.br
\fBRAWFILEOBJ getVoltagesNames\fP \fI?args?\fP
.br
\fBRAWFILEOBJ measure\fP \fI?args?\fP
.br
\fBOBJECT constructor\fP \fIvalue ?-name value?\fP
.br
\fBRAWSTRINGOBJ genSPICEString\fP
.br
\fBOBJECT constructor\fP \fIvectors ?-name value?\fP
.br
\fBSAVEOBJ destroy\fP
.br
\fBSAVEOBJ addVector\fP \fI?args?\fP
.br
\fBSAVEOBJ deleteVector\fP \fI?args?\fP
.br
\fBSAVEOBJ genSPICEString\fP
.br
\fBSAVEOBJ getVectors\fP \fI?args?\fP
.br
\fBSimulator create OBJNAME\fP
.br
\fBSimulator new\fP
.br
\fBSIMULATOROBJ getLog\fP
.br
\fBSIMULATOROBJ readData\fP
.br
\fBSIMULATOROBJ readLog\fP
.br
\fBSIMULATOROBJ run\fP
.br
\fBSPICEElement create OBJNAME\fP
.br
\fBSPICEElement new\fP
.br
\fBSPICEELEMENTOBJ genSPICEString\fP
.br
\fBSubcircuit create OBJNAME\fP \fI?args?\fP
.br
\fBSubcircuit new\fP \fI?args?\fP
.br
\fBSUBCIRCUITOBJ destroy\fP
.br
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
\fBOBJECT actOnPin\fP \fI-add pin node\fP
.br
\fBOBJECT actOnPin\fP \fI-set pin node\fP
.br
\fBOBJECT actOnPin\fP \fI-get pin\fP
.br
\fBOBJECT actOnPin\fP \fI-get -all\fP
.br
\fBSUBCIRCUITOBJ add\fP \fI?args?\fP
.br
\fBSUBCIRCUITOBJ genSPICEString\fP
.br
\fBOBJECT constructor\fP \fIvalue ?-eq?\fP
.br
\fBTEMPOBJ genSPICEString\fP
.br
\fBTrace create OBJNAME\fP \fI?args?\fP
.br
\fBTrace new\fP \fI?args?\fP
.br
\fBUtility create OBJNAME\fP
.br
\fBUtility new\fP
.br
.SH ::SPICEGENTCL
.SH COMMANDS
.PP
.RS -4n
\fBforgetCommon\fR (::SpiceGenTcl)
.RE
.PP
Forgets all ::SpiceGenTcl::Common commands from caller namespace
.RS 4n
\fBforgetCommon\fP
.br
.RE
.PP
.RS -4n
\fBforgetLtspice\fR (::SpiceGenTcl)
.RE
.PP
Forgets all ::SpiceGenTcl::Ltspice commands from caller namespace
.RS 4n
\fBforgetLtspice\fP
.br
.RE
.PP
.RS -4n
\fBforgetNgspice\fR (::SpiceGenTcl)
.RE
.PP
Forgets all ::SpiceGenTcl::Ngspice commands from caller namespace
.RS 4n
\fBforgetNgspice\fP
.br
.RE
.PP
.RS -4n
\fBforgetXyce\fR (::SpiceGenTcl)
.RE
.PP
Forgets all ::SpiceGenTcl::Xyce commands from caller namespace
.RS 4n
\fBforgetXyce\fP
.br
.RE
.PP
.RS -4n
\fBimportCommon\fR (::SpiceGenTcl)
.RE
.PP
Imports all ::SpiceGenTcl::Common commands to caller namespace
.RS 4n
\fBimportCommon\fP
.br
.RE
.PP
.RS -4n
\fBimportLtspice\fR (::SpiceGenTcl)
.RE
.PP
Imports all ::SpiceGenTcl::Ltspice commands to caller namespace
.RS 4n
\fBimportLtspice\fP
.br
.RE
.PP
.RS -4n
\fBimportNgspice\fR (::SpiceGenTcl)
.RE
.PP
Imports all ::SpiceGenTcl::Ngspice commands to caller namespace
.RS 4n
\fBimportNgspice\fP
.br
.RE
.PP
.RS -4n
\fBimportXyce\fR (::SpiceGenTcl)
.RE
.PP
Imports all ::SpiceGenTcl::Xyce commands to caller namespace
.RS 4n
\fBimportXyce\fP
.br
.RE
.SH CLASSES
.PP
.RS -4n
\fBAnalysis\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
actOnParam
Acts on Parameter object with selected action\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates analysis for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-type
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
\fBSubclasses\fR
.PP
\fI::SpiceGenTcl::Common::Analyses::Dc\fP, \fI::SpiceGenTcl::Common::Analyses::Ac\fP, \fI::SpiceGenTcl::Common::Analyses::Tran\fP, \fI::SpiceGenTcl::Common::Analyses::Op\fP, \fI::SpiceGenTcl::Ngspice::Analyses::Sp\fP, \fI::SpiceGenTcl::Ngspice::Analyses::SensAc\fP, \fI::SpiceGenTcl::Ngspice::Analyses::SensDc\fP, \fI::SpiceGenTcl::Xyce::Analyses::Sens\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Analysis)
.RE
.PP
Creates object of class Analysis\&.
.RS 4n
\fBOBJECT constructor\fP \fItype params ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the string that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
params
List of instance parameters in form {{name value} {name -sw} {name Value -eq} {name Value -posnocheck} \&.\&.\&.}
.TP
type
Type of analysis, for example, tran, ac, dc, etc\&.
.RE
.PP
\fBDescription\fR
.PP
Class models analysis statement\&.
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::Analysis)
.RE
.PP
Destroy object of class Analysis, and its Parameters objects\&.
.RS 4n
\fBANALYSISOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBactOnParam\fR (::SpiceGenTcl::Analysis)
.RE
.PP
Acts on Parameter object with selected action
.RS 4n
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new parameter to the device, requires pname argument\&.
.TP
-all
Option for getting the dictionary that contains parameters names as keys and parameters values #    as the dictionary values, requires -get
.TP
-delete
Delete existing parameter\&.
.TP
-eq
Parameter may contain equation in terms of functions and other parameters, printed as $name={$equation}, requires -add
.TP
-get
Get parameter value, requires pname argument\&.
.TP
-nocheck
Normal parameter without check, requires -add
.TP
-node
Node parameter, requires -add
.TP
-nodeeq
Node parameter equation, requires -add
.TP
-pos
Parameter has strict position and only $value is displayed in netlist, requires -add
.TP
-poseq
Combination of both flags, print only, requires -add
.TP
-posnocheck
Positional parameter without check, requires -add
.TP
-set
Set (or change) value of particular parameters, requires pname and value arguments\&.
.TP
-sw
Switch parameter, requires -add
.TP
arguments
Optional pairs of name-value for -set action, requires -set
.TP
pname
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Analysis)
.RE
.PP
Creates analysis for SPICE netlist\&.
.RS 4n
\fBANALYSISOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
string SPICE netlist's string
.PP
.RS -4n
\fBAxis\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
appendDataPoints
See \fIDataset\&.appendDataPoints\fP
.TP
configure
Configure properties\&.
.TP
getDataPoints
See \fIDataset\&.getDataPoints\fP
.TP
getStr
See \fIDataset\&.getStr\fP
.TP
setDataPoints
See \fIDataset\&.setDataPoints\fP
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-len
Readable, writable\&.
.TP
-name
Readable, writable\&.
.TP
-numtype
Readable, writable\&.
.TP
-type
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIDataset\fP
.PP
.RS -4n
\fBBinaryReader\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
configure
Configure properties\&.
.TP
readComplex
Reads two 8 byte numbers from file\&.
.TP
readFloat32
Reads 4 bytes number from file\&.
.TP
readFloat64
Reads 8 bytes number from file \&.
.TP
skip4bytes
Moves pointer of position in file forward in 4 bytes\&.
.TP
skip8bytes
Moves pointer of position in file forward in 8 bytes\&.
.TP
skip16bytes
Moves pointer of position in file forward in 16 bytes\&.
.RE
.PP
\fBSubclasses\fR
.PP
\fIRawFile\fP
.PP
.RS -4n
\fBreadComplex\fR (::SpiceGenTcl::BinaryReader)
.RE
.PP
Reads two 8 byte numbers from file\&.
.RS 4n
\fBBINARYREADEROBJ readComplex\fP \fIfile\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
file
File handler\&.
.RE
.PP
\fBReturn value\fR
.PP
list of two values\&.
.PP
.RS -4n
\fBreadFloat32\fR (::SpiceGenTcl::BinaryReader)
.RE
.PP
Reads 4 bytes number from file\&.
.RS 4n
\fBBINARYREADEROBJ readFloat32\fP \fIfile\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
file
File handler\&.
.RE
.PP
\fBReturn value\fR
.PP
value of number\&.
.PP
.RS -4n
\fBreadFloat64\fR (::SpiceGenTcl::BinaryReader)
.RE
.PP
Reads 8 bytes number from file \&.
.RS 4n
\fBBINARYREADEROBJ readFloat64\fP \fIfile\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
file
File handler\&.
.RE
.PP
\fBReturn value\fR
.PP
value of number\&.
.PP
.RS -4n
\fBskip4bytes\fR (::SpiceGenTcl::BinaryReader)
.RE
.PP
Moves pointer of position in file forward in 4 bytes\&.
.RS 4n
\fBBINARYREADEROBJ skip4bytes\fP \fIfile\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
file
File handler\&.
.RE
.PP
.RS -4n
\fBskip8bytes\fR (::SpiceGenTcl::BinaryReader)
.RE
.PP
Moves pointer of position in file forward in 8 bytes\&.
.RS 4n
\fBBINARYREADEROBJ skip8bytes\fP \fIfile\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
file
File handler\&.
.RE
.PP
.RS -4n
\fBskip16bytes\fR (::SpiceGenTcl::BinaryReader)
.RE
.PP
Moves pointer of position in file forward in 16 bytes\&.
.RS 4n
\fBBINARYREADEROBJ skip16bytes\fP \fIfile\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
file
File handler\&.
.RE
.PP
.RS -4n
\fBCircuit\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
add
Adds elements object to Circuit Elements dictionary\&.
.TP
configure
Configure properties\&.
.TP
del
Deletes elements from the circuit by its name\&.
.TP
detachSimulator
Removes Simulator object reference from Circuit\&.
.TP
genSPICEString
Creates circuit string for SPICE netlist\&.
.TP
getAllElemNames
See \fINetlist\&.getAllElemNames\fP
.TP
getDataCsv
Returns string with CSV formatting containing all data\&.
.TP
getDataDict
Gets dictionary with raw data vectors\&.
.TP
getElement
See \fINetlist\&.getElement\fP
.TP
runAndRead
Invokes runAndRead, configure -log and configure -data methods from attached simulator\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-data
Readable, writable\&.
.TP
-log
Readable, writable\&.
.TP
-name
Readable, writable\&.
.TP
-simulator
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fINetlist\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Circuit)
.RE
.PP
Creates object of class CircuitNetlist\&.
.RS 4n
\fBOBJECT constructor\fP \fIname\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the tol-level circuit\&.
.RE
.PP
\fBDescription\fR
.PP
Class implements a top level netlist which is run in SPICE\&. We should add \fI::SpiceGenTcl::Simulator\fP
object reference to make it able to run simulation\&.
.PP
.RS -4n
\fBadd\fR (::SpiceGenTcl::Circuit)
.RE
.PP
Adds elements object to Circuit Elements dictionary\&.
.RS 4n
\fBOBJECT add\fP \fIelement ?element \&.\&.\&.?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
elements
Elements objects references\&.
.RE
.PP
.RS -4n
\fBdel\fR (::SpiceGenTcl::Circuit)
.RE
.PP
Deletes elements from the circuit by its name\&.
.RS 4n
\fBOBJECT del\fP \fIelementName ?elementName \&.\&.\&.?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
args
Elements names\&.
.RE
.PP
.RS -4n
\fBdetachSimulator\fR (::SpiceGenTcl::Circuit)
.RE
.PP
Removes Simulator object reference from Circuit\&.
.RS 4n
\fBCIRCUITOBJ detachSimulator\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Circuit)
.RE
.PP
Creates circuit string for SPICE netlist\&.
.RS 4n
\fBCIRCUITOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBgetDataCsv\fR (::SpiceGenTcl::Circuit)
.RE
.PP
Returns string with CSV formatting containing all data
.RS 4n
\fBOBJECT getDataCsv\fP \fI?-all? ?-traces list? ?-sep value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-all
Select all traces\&.
.TP
-sep value
Separator of columns, default is comma\&.
.TP
-traces list
Select names of traces to return\&.
.RE
.PP
\fBReturn value\fR
.PP
Returns string with CSV formatting containing all data
.PP
.RS -4n
\fBgetDataDict\fR (::SpiceGenTcl::Circuit)
.RE
.PP
Gets dictionary with raw data vectors\&.
.RS 4n
\fBCIRCUITOBJ getDataDict\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
dict with vectors data, keys - names of vectors
.PP
.RS -4n
\fBrunAndRead\fR (::SpiceGenTcl::Circuit)
.RE
.PP
Invokes runAndRead, configure -log and configure -data methods from attached simulator\&.
.RS 4n
\fBOBJECT runAndRead\fP \fI?-nodelete?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-nodelete
Flag to forbid simulation file deletion\&.
.RE
.PP
.RS -4n
\fBComment\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates comment string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIRawString\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Comment)
.RE
.PP
Creates object of class Comment\&.
.RS 4n
\fBOBJECT constructor\fP \fIvalue ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the string that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
value
Value of the comment\&.
.RE
.PP
\fBDescription\fR
.PP
Class represent comment string, it can be a multiline comment\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Comment)
.RE
.PP
Creates comment string for SPICE netlist\&.
.RS 4n
\fBCOMMENTOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBDataset\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
appendDataPoints
Appends the data points to the existing ones\&.
.TP
configure
Configure properties\&.
.TP
getDataPoints
Gets the data points\&.
.TP
getStr
Returns metadata of Dataset
.TP
setDataPoints
Sets the data points\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-len
Readable, writable\&.
.TP
-name
Readable, writable\&.
.TP
-numtype
Readable, writable\&. method to set the numerical type of the dataset\&.
.TP
-type
Readable, writable\&.
.RE
.PP
\fBSubclasses\fR
.PP
\fIAxis\fP, \fITrace\fP, \fIEmptyTrace\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Dataset)
.RE
.PP
Initializes Dataset object\&.
.RS 4n
\fBDataset create OBJNAME\fP \fI?args?\fP
.br
\fBDataset new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
len
Total number of points\&.
.TP
name
Name of the dataset\&.
.TP
numtype
Numerical type of dataset\&.
.TP
type
Type of dataset\&.
.RE
.PP
.RS -4n
\fBappendDataPoints\fR (::SpiceGenTcl::Dataset)
.RE
.PP
Appends the data points to the existing ones
.RS 4n
\fBDATASETOBJ appendDataPoints\fP \fIdataPoint\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
dataPoint
Not documented\&.
.TP
dataPoints
Data points\&.
.RE
.PP
.RS -4n
\fBgetDataPoints\fR (::SpiceGenTcl::Dataset)
.RE
.PP
Gets the data points
.RS 4n
\fBDATASETOBJ getDataPoints\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
.RS -4n
\fBgetStr\fR (::SpiceGenTcl::Dataset)
.RE
.PP
Returns metadata of Dataset
.RS 4n
\fBDATASETOBJ getStr\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
Returns metadata of Dataset
.PP
.RS -4n
\fBsetDataPoints\fR (::SpiceGenTcl::Dataset)
.RE
.PP
Sets the data points
.RS 4n
\fBDATASETOBJ setDataPoints\fP \fIdataPoints\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
dataPoints
Data points\&.
.RE
.PP
.RS -4n
\fBDevice\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
actOnParam
Acts on Parameter object with selected action\&.
.TP
actOnPin
Acts on Pin object with selected action\&.
.TP
checkFloatingPins
Check if some pin device doesn't have connected nodes and return list of them\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates device string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
\fBSubclasses\fR
.PP
\fI::SpiceGenTcl::Common::BasicDevices::Resistor\fP, \fI::SpiceGenTcl::Common::BasicDevices::Capacitor\fP, \fI::SpiceGenTcl::Common::BasicDevices::Inductor\fP, \fI::SpiceGenTcl::Common::BasicDevices::SubcircuitInstance\fP, \fI::SpiceGenTcl::Common::BasicDevices::VSwitch\fP, \fI::SpiceGenTcl::Common::BasicDevices::CSwitch\fP, \fI::SpiceGenTcl::Common::BasicDevices::SubcircuitInstanceAuto\fP, \fI::SpiceGenTcl::Common::Sources::dc\fP, \fI::SpiceGenTcl::Common::Sources::ac\fP, \fI::SpiceGenTcl::Common::Sources::pulse\fP, \fI::SpiceGenTcl::Common::Sources::sin\fP, \fI::SpiceGenTcl::Common::Sources::exp\fP, \fI::SpiceGenTcl::Common::Sources::pwl\fP, \fI::SpiceGenTcl::Common::Sources::sffm\fP, \fI::SpiceGenTcl::Common::Sources::Vccs\fP, \fI::SpiceGenTcl::Common::Sources::Vcvs\fP, \fI::SpiceGenTcl::Common::Sources::Cccs\fP, \fI::SpiceGenTcl::Common::Sources::Ccvs\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::Resistor\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::Capacitor\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::Inductor\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::Coupling\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::SubcircuitInstance\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::SubcircuitInstanceAuto\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::VerilogA\fP, \fI::SpiceGenTcl::Ngspice::Sources::pulse\fP, \fI::SpiceGenTcl::Ngspice::Sources::sffm\fP, \fI::SpiceGenTcl::Ngspice::Sources::am\fP, \fI::SpiceGenTcl::Ngspice::Sources::Vport\fP, \fI::SpiceGenTcl::Ngspice::Sources::BehaviouralSource\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::Diode\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::Bjt\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::Jfet\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::Mesfet\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::Mosfet\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::Resistor\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::Capacitor\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::Inductor\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::GenSwitch\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::SubcircuitInstance\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::SubcircuitInstanceAuto\fP, \fI::SpiceGenTcl::Xyce::Sources::BehaviouralSource\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::Diode\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::Bjt\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::Jfet\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::Mesfet\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::Mosfet\fP, \fI::SpiceGenTcl::Ltspice::BasicDevices::Capacitor\fP, \fI::SpiceGenTcl::Ltspice::BasicDevices::Inductor\fP, \fI::SpiceGenTcl::Ltspice::BasicDevices::SubcircuitInstance\fP, \fI::SpiceGenTcl::Ltspice::BasicDevices::SubcircuitInstanceAuto\fP, \fI::SpiceGenTcl::Ltspice::Sources::dc\fP, \fI::SpiceGenTcl::Ltspice::Sources::ac\fP, \fI::SpiceGenTcl::Ltspice::Sources::pulse\fP, \fI::SpiceGenTcl::Ltspice::Sources::sin\fP, \fI::SpiceGenTcl::Ltspice::Sources::exp\fP, \fI::SpiceGenTcl::Ltspice::Sources::pwl\fP, \fI::SpiceGenTcl::Ltspice::Sources::sffm\fP, \fI::SpiceGenTcl::Ltspice::Sources::BehaviouralSource\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::Diode\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::Bjt\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::Jfet\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::Mesfet\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::Mosfet\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Device)
.RE
.PP
Creates object of class Device\&.
.RS 4n
\fBDevice create OBJNAME\fP \fI?args?\fP
.br
\fBDevice new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the device\&.
.TP
params
List of instance parameters in form {{Name Value ?-sw|pos|eq|poseq|posnocheck|nocheck?}  {Name Value ?-sw|pos|eq|poseq|posnocheck|nocheck?} {Name Value ?-sw|pos|eq|poseq|posnocheck|nocheck?}  \&.\&.\&.} Parameter list can be empty if device doesn't have instance parameters\&.
.TP
pins
List of pins in the order they appear in SPICE device's definition together with connected node in form: {{Name0 NodeName} {Name1 NodeName} {Name2 NodeName} \&.\&.\&.} Nodes string values could be empty\&.
.RE
.PP
\fBDescription\fR
.PP
Class models general device in SPICE, number of which must be assembled (connected) to get the circuit to
simulate\&. This class provides basic machinery for creating any device that can be connected to net in
circuit\&. It can be instantiated to create device that contains:
.TP
\(bu
reference name, like R1, L1, M1, etc;
.TP
\(bu
list of pins in the order of appearence of device's definition, for example, 'drain gate source' for MOS transistor;
.TP
\(bu
list of parameters, that could be positional (+equation), keyword (+equation) parameters, like R1 nm np 100 tc1=1 tc2={tc0*tc12}, where 100 - positional parameter, tc1 - keyword parameters and tc2
.TP
\(bu
keyword parameter with equation
.PP
This class accept definition that contains elements listed above, and generates classes: Pin,
Parameter, ParameterPositional with compositional relationship\&.
.PP
Each parameter definition could be modified by
optional flags:
.RS 4n
.TP
-pos
Parameter has strict position and only $value is displayed in netlist\&.
.TP
-eq
Parameter may contain equation in terms of functions and other parsmeters, printed as $name={$equation}
.TP
-poseq
Combination of both flags, print only {$equation}
.TP
-posnocheck
Positional parameter without check\&.
.TP
-nocheck
Normal parameter without check\&.
.RE
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::Device)
.RE
.PP
Destroy object of class Device, its Parameter and Pin objects\&.
.RS 4n
\fBDEVICEOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBactOnParam\fR (::SpiceGenTcl::Device)
.RE
.PP
Acts on Parameter object with selected action
.RS 4n
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new parameter to the device, requires pname argument\&.
.TP
-all
Option for getting the dictionary that contains parameters names as keys and parameters values #    as the dictionary values, requires -get
.TP
-delete
Delete existing parameter\&.
.TP
-eq
Parameter may contain equation in terms of functions and other parameters, printed as $name={$equation}, requires -add
.TP
-get
Get parameter value, requires pname argument\&.
.TP
-nocheck
Normal parameter without check, requires -add
.TP
-node
Node parameter, requires -add
.TP
-nodeeq
Node parameter equation, requires -add
.TP
-pos
Parameter has strict position and only $value is displayed in netlist, requires -add
.TP
-poseq
Combination of both flags, print only, requires -add
.TP
-posnocheck
Positional parameter without check, requires -add
.TP
-set
Set (or change) value of particular parameters, requires pname and value arguments\&.
.TP
-sw
Switch parameter, requires -add
.TP
arguments
Optional pairs of name-value for -set action, requires -set
.TP
pname
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
.RS -4n
\fBactOnPin\fR (::SpiceGenTcl::Device)
.RE
.PP
Acts on Pin object with selected action
.RS 4n
\fBOBJECT actOnPin\fP \fI-add pin node\fP
.br
\fBOBJECT actOnPin\fP \fI-set pin node\fP
.br
\fBOBJECT actOnPin\fP \fI-get pin\fP
.br
\fBOBJECT actOnPin\fP \fI-get -all\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new pin to the device, requires pin and node arguments\&.
.TP
-all
Option for getting the dictionary that contains pin name as keys and connected node name as the values, requires -get
.TP
-get
Get node name connected to pin, requires pin argument\&.
.TP
-set
Set node name connected to pin, requires pin and node arguments\&.
.TP
node
Name of the node connected to pin\&.
.TP
pin
Name of the pin\&.
.RE
.PP
.RS -4n
\fBcheckFloatingPins\fR (::SpiceGenTcl::Device)
.RE
.PP
Check if some pin device doesn't have connected nodes and return list of them\&.
.RS 4n
\fBDEVICEOBJ checkFloatingPins\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
list of floating pins
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Device)
.RE
.PP
Creates device string for SPICE netlist\&.
.RS 4n
\fBDEVICEOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBEmptyTrace\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
appendDataPoints
See \fIDataset\&.appendDataPoints\fP
.TP
configure
Configure properties\&.
.TP
getDataPoints
Not documented\&.
.TP
getStr
See \fIDataset\&.getStr\fP
.TP
setDataPoints
See \fIDataset\&.setDataPoints\fP
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-len
Readable, writable\&.
.TP
-name
Readable, writable\&.
.TP
-numtype
Readable, writable\&.
.TP
-type
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIDataset\fP
.PP
.RS -4n
\fBgetDataPoints\fR (::SpiceGenTcl::EmptyTrace)
.RE
.RS 4n
\fBEMPTYTRACEOBJ getDataPoints\fP
.br
.RE
.PP
.RS -4n
\fBFunction\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates func string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-body
Readable, writable\&.
.TP
-declaration
Readable, writable\&.
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Function)
.RE
.PP
Creates object of class Function\&.
.RS 4n
\fBOBJECT constructor\fP \fIdeclaration body ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the string that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
body
Body of the function\&.
.TP
declaration
Function declaration\&.
.RE
.PP
\fBDescription\fR
.PP
This class represent \&.func statement\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Function)
.RE
.PP
Creates func string for SPICE netlist\&.
.RS 4n
\fBFUNCTIONOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBGlobal\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
addNets
Not documented\&.
.TP
configure
Configure properties\&.
.TP
deleteNet
Not documented\&.
.TP
genSPICEString
Creates \&.global statement string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Global)
.RE
.PP
Creates object of class Global\&.
.RS 4n
\fBOBJECT constructor\fP \fInets ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the library that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
nets
List of nets in form {net0 net1 \&.\&.\&.}
.RE
.PP
\fBDescription\fR
.PP
Class represent \&.global statement\&.
.PP
.RS -4n
\fBaddNets\fR (::SpiceGenTcl::Global)
.RE
.RS 4n
\fBGLOBALOBJ addNets\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
.RS -4n
\fBdeleteNet\fR (::SpiceGenTcl::Global)
.RE
.RS 4n
\fBGLOBALOBJ deleteNet\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Global)
.RE
.PP
Creates \&.global statement string for SPICE netlist\&.
.RS 4n
\fBGLOBALOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBIc\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
actOnParam
Acts on Parameter object with selected action\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates \&.ic statement string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
\fBSubclasses\fR
.PP
\fINodeset\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Ic)
.RE
.PP
Creates object of class Ic\&.
.RS 4n
\fBOBJECT constructor\fP \fIparams ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the library that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
params
List of instance parameters in form {{name value} {name value} {name equation -eq} \&.\&.\&.}
.RE
.PP
\fBDescription\fR
.PP
Class represent \&.ic statement\&.
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::Ic)
.RE
.PP
Destroy object of class Ic, and its Parameter objects\&.
.RS 4n
\fBICOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBactOnParam\fR (::SpiceGenTcl::Ic)
.RE
.PP
Acts on Parameter object with selected action
.RS 4n
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new parameter to the device, requires pname argument\&.
.TP
-all
Option for getting the dictionary that contains parameters names as keys and parameters values #    as the dictionary values, requires -get
.TP
-delete
Delete existing parameter\&.
.TP
-eq
Parameter may contain equation in terms of functions and other parameters, printed as $name={$equation}, requires -add
.TP
-get
Get parameter value, requires pname argument\&.
.TP
-nocheck
Normal parameter without check, requires -add
.TP
-node
Node parameter, requires -add
.TP
-nodeeq
Node parameter equation, requires -add
.TP
-pos
Parameter has strict position and only $value is displayed in netlist, requires -add
.TP
-poseq
Combination of both flags, print only, requires -add
.TP
-posnocheck
Positional parameter without check, requires -add
.TP
-set
Set (or change) value of particular parameters, requires pname and value arguments\&.
.TP
-sw
Switch parameter, requires -add
.TP
arguments
Optional pairs of name-value for -set action, requires -set
.TP
pname
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Ic)
.RE
.PP
Creates \&.ic statement string for SPICE netlist\&.
.RS 4n
\fBICOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBInclude\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates include string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIRawString\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Include)
.RE
.PP
Creates object of class Include\&.
.RS 4n
\fBOBJECT constructor\fP \fIvalue ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the string that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
value
Value of the include path\&.
.RE
.PP
\fBDescription\fR
.PP
This class represent \&.include statement\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Include)
.RE
.PP
Creates include string for SPICE netlist\&.
.RS 4n
\fBINCLUDEOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBLibrary\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates library string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-libvalue
Readable, writable\&.
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIRawString\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Library)
.RE
.PP
Creates object of class Library\&.
.RS 4n
\fBOBJECT constructor\fP \fIvalue libvalue ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the string that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
libvalue
Value of selected library\&.
.TP
value
Value of the include file\&.
.RE
.PP
\fBDescription\fR
.PP
Class represent \&.lib statement\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Library)
.RE
.PP
Creates library string for SPICE netlist\&.
.RS 4n
\fBLIBRARYOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBModel\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
actOnParam
Acts on Parameter object with selected action\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates model string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-type
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
\fBSubclasses\fR
.PP
\fI::SpiceGenTcl::Ngspice::BasicDevices::RModel\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::CModel\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::LModel\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::VSwitchModel\fP, \fI::SpiceGenTcl::Ngspice::BasicDevices::CSwitchModel\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::DiodeModel\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::BjtGPModel\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::Jfet1Model\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::Jfet2Model\fP, \fI::SpiceGenTcl::Ngspice::SemiconductorDevices::Mesfet1Model\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::RModel\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::CModel\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::LModel\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::VSwitchModel\fP, \fI::SpiceGenTcl::Xyce::BasicDevices::CSwitchModel\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::DiodeModel\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::BjtGPModel\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::Jfet1Model\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::Jfet2Model\fP, \fI::SpiceGenTcl::Xyce::SemiconductorDevices::Mesfet1Model\fP, \fI::SpiceGenTcl::Ltspice::BasicDevices::VSwitchModel\fP, \fI::SpiceGenTcl::Ltspice::BasicDevices::CSwitchModel\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::DiodeModel\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::DiodeIdealModel\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::BjtGPModel\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::JfetModel\fP, \fI::SpiceGenTcl::Ltspice::SemiconductorDevices::MesfetModel\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Model)
.RE
.PP
Creates object of class Model\&.
.RS 4n
\fBModel create OBJNAME\fP \fI?args?\fP
.br
\fBModel new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
instParams
List of instance parameters in form {{name value ?-pos|eq|poseq?}  {name value ?-pos|eq|poseq?} {name value ?-pos|eq|poseq?} \&.\&.\&.}
.TP
name
Name of the model\&.
.TP
type
Type of model, for example, diode, npn, etc\&.
.RE
.PP
\fBDescription\fR
.PP
Class represents model card in SPICE netlist\&.
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::Model)
.RE
.PP
Destroy object of class Model, and its Parameter objects\&.
.RS 4n
\fBMODELOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBactOnParam\fR (::SpiceGenTcl::Model)
.RE
.PP
Acts on Parameter object with selected action
.RS 4n
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new parameter to the device, requires pname argument\&.
.TP
-all
Option for getting the dictionary that contains parameters names as keys and parameters values #    as the dictionary values, requires -get
.TP
-delete
Delete existing parameter\&.
.TP
-eq
Parameter may contain equation in terms of functions and other parameters, printed as $name={$equation}, requires -add
.TP
-get
Get parameter value, requires pname argument\&.
.TP
-nocheck
Normal parameter without check, requires -add
.TP
-node
Node parameter, requires -add
.TP
-nodeeq
Node parameter equation, requires -add
.TP
-pos
Parameter has strict position and only $value is displayed in netlist, requires -add
.TP
-poseq
Combination of both flags, print only, requires -add
.TP
-posnocheck
Positional parameter without check, requires -add
.TP
-set
Set (or change) value of particular parameters, requires pname and value arguments\&.
.TP
-sw
Switch parameter, requires -add
.TP
arguments
Optional pairs of name-value for -set action, requires -set
.TP
pname
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Model)
.RE
.PP
Creates model string for SPICE netlist\&.
.RS 4n
\fBMODELOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBNetlist\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
add
Adds elements objects to Elements dictionary\&.
.TP
configure
Configure properties\&.
.TP
del
Deletes elements from the netlist by its name\&.
.TP
genSPICEString
Creates netlist string for SPICE netlist\&.
.TP
getAllElemNames
Gets names of all elements in netlist\&.
.TP
getElement
Gets particular element object reference by its name\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
\fBSubclasses\fR
.PP
\fICircuit\fP, \fISubcircuit\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Netlist)
.RE
.PP
Creates object of class Netlist\&.
.RS 4n
\fBNetlist create OBJNAME\fP \fI?args?\fP
.br
\fBNetlist new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the netlist\&.
.RE
.PP
\fBDescription\fR
.PP
Class implements netlist as a collection of SPICE elements\&. Any element that has SPICEElement as a parent
class can be added to Netlist, except Options and Analysis\&.
.PP
.RS -4n
\fBadd\fR (::SpiceGenTcl::Netlist)
.RE
.PP
Adds elements objects to Elements dictionary\&.
.RS 4n
\fBOBJECT add\fP \fIelement ?element \&.\&.\&.?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
elements
Elements objects references\&.
.RE
.PP
.RS -4n
\fBdel\fR (::SpiceGenTcl::Netlist)
.RE
.PP
Deletes elements from the netlist by its name\&.
.RS 4n
\fBOBJECT del\fP \fIelementName ?elementName \&.\&.\&.?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
elementsNames
Names of elements to delete\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Netlist)
.RE
.PP
Creates netlist string for SPICE netlist\&.
.RS 4n
\fBNETLISTOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBgetAllElemNames\fR (::SpiceGenTcl::Netlist)
.RE
.PP
Gets names of all elements in netlist\&.
.RS 4n
\fBNETLISTOBJ getAllElemNames\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
list of elements names
.PP
.RS -4n
\fBgetElement\fR (::SpiceGenTcl::Netlist)
.RE
.PP
Gets particular element object reference by its name\&.
.RS 4n
\fBOBJECT getElement\fP \fIelemName\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
elemName
Name of element\&.
.RE
.PP
.RS -4n
\fBNodeset\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
actOnParam
See \fIIc\&.actOnParam\fP
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates \&.nodeset statement string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIIc\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Nodeset)
.RE
.PP
Creates \&.nodeset statement string for SPICE netlist\&.
.RS 4n
\fBNODESETOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBOptions\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
actOnParam
Acts on Parameter object with selected action\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates options string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
\fBSubclasses\fR
.PP
\fI::SpiceGenTcl::Ngspice::Misc::OptionsNgspice\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Options)
.RE
.PP
Creates object of class Options\&.
.RS 4n
\fBOBJECT constructor\fP \fIparams ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the string that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
params
List of instance parameters in form {{name value ?-sw?} {name value ?-sw?}  {name value ?-sw?} \&.\&.\&.}
.RE
.PP
\fBDescription\fR
.PP
This class represent \&.options statement\&.
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::Options)
.RE
.PP
Destroy object of class Options, and its Parameter objects\&.
.RS 4n
\fBOPTIONSOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBactOnParam\fR (::SpiceGenTcl::Options)
.RE
.PP
Acts on Parameter object with selected action
.RS 4n
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new parameter to the device, requires pname argument\&.
.TP
-all
Option for getting the dictionary that contains parameters names as keys and parameters values #    as the dictionary values, requires -get
.TP
-delete
Delete existing parameter\&.
.TP
-eq
Parameter may contain equation in terms of functions and other parameters, printed as $name={$equation}, requires -add
.TP
-get
Get parameter value, requires pname argument\&.
.TP
-nocheck
Normal parameter without check, requires -add
.TP
-node
Node parameter, requires -add
.TP
-nodeeq
Node parameter equation, requires -add
.TP
-pos
Parameter has strict position and only $value is displayed in netlist, requires -add
.TP
-poseq
Combination of both flags, print only, requires -add
.TP
-posnocheck
Positional parameter without check, requires -add
.TP
-set
Set (or change) value of particular parameters, requires pname and value arguments\&.
.TP
-sw
Switch parameter, requires -add
.TP
arguments
Optional pairs of name-value for -set action, requires -set
.TP
pname
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Options)
.RE
.PP
Creates options string for SPICE netlist\&.
.RS 4n
\fBOPTIONSOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBParameter\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameterSwitch\fP
.PP
\fBSubclasses\fR
.PP
\fIParameterNode\fP, \fIParameterNoCheck\fP, \fIParameterPositional\fP, \fIParameterDefault\fP, \fIParameterEquation\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Parameter)
.RE
.PP
Creates object of class Parameter with parameter name and value\&.
.RS 4n
\fBParameter create OBJNAME\fP \fI?args?\fP
.br
\fBParameter new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the parameter\&.
.TP
value
Value of the parameter\&.
.RE
.PP
\fBDescription\fR
.PP
Class models parameter that has a name and a value - the most common type of parameters in SPICE
netlist\&. Its representation in netlist is name=value, and can be called "keyword parameter"\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Parameter)
.RE
.PP
Creates string for SPICE netlist\&.
.RS 4n
\fBPARAMETEROBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBParameterDefault\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
See \fIParameter\&.genSPICEString\fP
.TP
resetValue
Resets value of the parameter to it's default value\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-defvalue
Readable, writable\&.
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameter\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterDefault)
.RE
.PP
Creates object of class ParameterDefault with parameter name, value and default value\&.
.RS 4n
\fBParameterDefault create OBJNAME\fP \fI?args?\fP
.br
\fBParameterDefault new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
defValue
Default value of the parameter\&.
.TP
name
Name of the parameter\&.
.TP
value
Value of the parameter\&.
.RE
.PP
\fBDescription\fR
.PP
Class models parameter that has a name and a value, but it differs from parent class in sense of having
default value, so it has special ability to reset its value to default value by special method
resetValue\&.
.PP
.RS -4n
\fBresetValue\fR (::SpiceGenTcl::ParameterDefault)
.RE
.PP
Resets value of the parameter to it's default value\&.
.RS 4n
\fBPARAMETERDEFAULTOBJ resetValue\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
.RS -4n
\fBParameterEquation\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameter\fP
.PP
\fBSubclasses\fR
.PP
\fIParameterPositionalEquation\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterEquation)
.RE
.PP
Creates object of class ParameterEquation with parameter name and value as an equation\&.
.RS 4n
\fBParameterEquation create OBJNAME\fP \fI?args?\fP
.br
\fBParameterEquation new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the parameter\&.
.TP
value
Value of the parameter\&.
.RE
.PP
\fBDescription\fR
.PP
Class models parameter that has representation as an equation\&.
Example: R={R1+R2}
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::ParameterEquation)
.RE
.PP
Creates string for SPICE netlist\&.
.RS 4n
\fBPARAMETEREQUATIONOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBParameterNoCheck\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
See \fIParameter\&.genSPICEString\fP
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameter\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterNoCheck)
.RE
.PP
Creates object of class ParameterNoCheck with parameter name and value\&.
.RS 4n
\fBParameterNoCheck create OBJNAME\fP \fI?args?\fP
.br
\fBParameterNoCheck new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the parameter\&.
.TP
value
Value of the parameter\&.
.RE
.PP
\fBDescription\fR
.PP
Class models parameter the same as described by Parameter but without check for value form\&.
.PP
.RS -4n
\fBParameterNode\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameter\fP
.PP
\fBSubclasses\fR
.PP
\fIParameterNodeEquation\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterNode)
.RE
.PP
Creates object of class ParameterNode with parameter name and value\&.
.RS 4n
\fBParameterNode create OBJNAME\fP \fI?args?\fP
.br
\fBParameterNode new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the parameter\&.
.TP
value
Value of the parameter\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::ParameterNode)
.RE
.PP
Creates string for SPICE netlist\&.
.RS 4n
\fBPARAMETERNODEOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBParameterNodeEquation\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameterNode\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterNodeEquation)
.RE
.PP
Creates object of class ParameterNodeEquation with parameter name and value\&.
.RS 4n
\fBParameterNodeEquation create OBJNAME\fP \fI?args?\fP
.br
\fBParameterNodeEquation new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the parameter\&.
.TP
value
Value of the parameter\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::ParameterNodeEquation)
.RE
.PP
Creates string for SPICE netlist\&.
.RS 4n
\fBPARAMETERNODEEQUATIONOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBParameterPositional\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameter\fP
.PP
\fBSubclasses\fR
.PP
\fIParameterPositionalNoCheck\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterPositional)
.RE
.PP
Creates object of class ParameterPositional with parameter name and value\&.
.RS 4n
\fBParameterPositional create OBJNAME\fP \fI?args?\fP
.br
\fBParameterPositional new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
\fBDescription\fR
.PP
Class models parameter that has a name and a value, but it differs from parent class in the sense of
netlist representation: this parameter represents only by the value in the netlist\&. It's meaning for
holding element is taken from it's position in the element's definition, for example, R1 np nm 100 tc1=1
tc2=0 - resistor with positional parameter R=100, you can't put it after parameters tc1 and tc2, it
must be placed right after the pins definition\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::ParameterPositional)
.RE
.PP
Creates string for SPICE netlist\&.
.RS 4n
\fBPARAMETERPOSITIONALOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBParameterPositionalEquation\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameterEquation\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterPositionalEquation)
.RE
.PP
Creates object of class ParameterPositionalEquation with parameter name and value as an equation in
positional form\&.
.RS 4n
\fBParameterPositionalEquation create OBJNAME\fP \fI?args?\fP
.br
\fBParameterPositionalEquation new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the parameter\&.
.TP
value
Value of the parameter\&.
.RE
.PP
\fBDescription\fR
.PP
Class models parameter that has representation as an equation, but in form of positional parameter\&.
Example: {R1+R2}
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::ParameterPositionalEquation)
.RE
.PP
Creates string for SPICE netlist\&.
.RS 4n
\fBPARAMETERPOSITIONALEQUATIONOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBParameterPositionalNoCheck\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&. Results: SPICE netlist's string\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameterPositional\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterPositionalNoCheck)
.RE
.PP
Creates object of class ParameterPositionalNoCheck\&.
.RS 4n
\fBParameterPositionalNoCheck create OBJNAME\fP \fI?args?\fP
.br
\fBParameterPositionalNoCheck new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
\fBDescription\fR
.PP
Class models parameter the same as described by ParameterPositional but without check for value form\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::ParameterPositionalNoCheck)
.RE
.PP
Creates string for SPICE netlist\&.
Results: SPICE netlist's string
.RS 4n
\fBPARAMETERPOSITIONALNOCHECKOBJ genSPICEString\fP
.br
.RE
.PP
.RS -4n
\fBParameterSwitch\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBSubclasses\fR
.PP
\fIParameter\fP, \fIParameterVector\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParameterSwitch)
.RE
.PP
Creates object of class ParameterSwitch with parameter name\&.
.RS 4n
\fBParameterSwitch create OBJNAME\fP \fI?args?\fP
.br
\fBParameterSwitch new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the parameter\&.
.RE
.PP
\fBDescription\fR
.PP
Class models base parameter acting like a switch - its presence gives us information that something it
controls is on\&. This parameter doesn't have a value, and it is the most basic class in Parameter class
family\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::ParameterSwitch)
.RE
.PP
Creates string for SPICE netlist\&.
.RS 4n
\fBPARAMETERSWITCHOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
string $name
.PP
.RS -4n
\fBParameterVector\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
configure
Configure properties\&.
.TP
genSPICEString
See \fIParameterSwitch\&.genSPICEString\fP
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIParameterSwitch\fP
.PP
.RS -4n
\fBParamStatement\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
actOnParam
Acts on Parameter object with selected action\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates parameter statement string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::ParamStatement)
.RE
.PP
Creates object of class ParamStatement\&.
.RS 4n
\fBOBJECT constructor\fP \fIparams ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the library that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
params
List of instance parameters in form {{name value ?-eq?} {name value ?-eq?} \&.\&.\&.}
.RE
.PP
\fBDescription\fR
.PP
Class represent \&.param statement\&.
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::ParamStatement)
.RE
.PP
Destroy object of class ParamStatement, and its Parameter objects\&.
.RS 4n
\fBPARAMSTATEMENTOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBactOnParam\fR (::SpiceGenTcl::ParamStatement)
.RE
.PP
Acts on Parameter object with selected action
.RS 4n
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new parameter to the device, requires pname argument\&.
.TP
-all
Option for getting the dictionary that contains parameters names as keys and parameters values #    as the dictionary values, requires -get
.TP
-delete
Delete existing parameter\&.
.TP
-eq
Parameter may contain equation in terms of functions and other parameters, printed as $name={$equation}, requires -add
.TP
-get
Get parameter value, requires pname argument\&.
.TP
-nocheck
Normal parameter without check, requires -add
.TP
-node
Node parameter, requires -add
.TP
-nodeeq
Node parameter equation, requires -add
.TP
-pos
Parameter has strict position and only $value is displayed in netlist, requires -add
.TP
-poseq
Combination of both flags, print only, requires -add
.TP
-posnocheck
Positional parameter without check, requires -add
.TP
-set
Set (or change) value of particular parameters, requires pname and value arguments\&.
.TP
-sw
Switch parameter, requires -add
.TP
arguments
Optional pairs of name-value for -set action, requires -set
.TP
pname
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::ParamStatement)
.RE
.PP
Creates parameter statement string for SPICE netlist\&.
.RS 4n
\fBPARAMSTATEMENTOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBParser\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
buildTopNetlist
Builds top netlist corresponding to parsed netlist file\&. For unknowns to SpiceGenTcl models the new model class is created during the parsing and evaluated in a caller context\&. For each subcircuit (and nested subcircuits) the corresponding class is created and evaluated in a caller context\&.
.TP
configure
Configure properties\&.
.TP
readAndParse
Calls methods readFile and buildTopNetlist in a sequence\&.
.TP
readFile
Not documented\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-definitions
Readable, writable\&.
.TP
-filepath
Readable, writable\&.
.TP
-name
Readable, writable\&.
.TP
-topnetlist
Readable, writable\&.
.RE
.PP
\fBSubclasses\fR
.PP
\fI::SpiceGenTcl::Ngspice::NgspiceParser\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Parser)
.RE
.PP
Creates object of class Parser that do parsing of valid simulator netlist\&.
.RS 4n
\fBParser create OBJNAME\fP \fI?args?\fP
.br
\fBParser new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
filepath
Path to file that should be parsed\&.
.TP
name
Name of the object\&.
.RE
.PP
.RS -4n
\fBbuildTopNetlist\fR (::SpiceGenTcl::Parser)
.RE
.PP
Builds top netlist corresponding to parsed netlist file\&.
For unknowns to SpiceGenTcl models the new model class is created during the parsing and evaluated in a
caller context\&. For each subcircuit (and nested subcircuits) the corresponding class is created and
evaluated in a caller context\&.
.RS 4n
\fBPARSEROBJ buildTopNetlist\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
\fI::SpiceGenTcl::Netlist\fP object with attached elements succesfully parsed in input netlist file\&.
.PP
.RS -4n
\fBreadAndParse\fR (::SpiceGenTcl::Parser)
.RE
.PP
Calls methods readFile and buildTopNetlist in a sequence
.RS 4n
\fBPARSEROBJ readAndParse\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
.RS -4n
\fBreadFile\fR (::SpiceGenTcl::Parser)
.RE
.RS 4n
\fBPARSEROBJ readFile\fP
.br
.RE
.PP
.RS -4n
\fBPin\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
checkFloating
Determines if pin is connected to the node\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates string for SPICE netlist\&.
.TP
unsetNodeName
Makes pin floating by setting name of the node to empty string\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-node
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Pin)
.RE
.PP
Creates object of class Pin with name and connected node
.RS 4n
\fBOBJECT constructor\fP \fIname node\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the pin\&.
.TP
node
Name of the node that connected to pin\&.
.RE
.PP
\fBDescription\fR
.PP
Class models electrical pin of device/subcircuit, it has name and name of the node connected to it\&.  It
has general interface method genSPICEString that returns name of the node connected to it, this method
must be called only in method with the same name in other classes\&. We can check if pin is floating by
checking the name of connected node in method checkFloating - if is contains empty string it is
floating\&.  Floating pin can't be netlisted, so it throws error when try to do so\&. Set pin name empty by
special method unsetNodeName\&.
.PP
.RS -4n
\fBcheckFloating\fR (::SpiceGenTcl::Pin)
.RE
.PP
Determines if pin is connected to the node\&.
.RS 4n
\fBPINOBJ checkFloating\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
true if connected and false if not
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Pin)
.RE
.PP
Creates string for SPICE netlist\&.
.RS 4n
\fBPINOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBunsetNodeName\fR (::SpiceGenTcl::Pin)
.RE
.PP
Makes pin floating by setting name of the node to empty string\&.
.RS 4n
\fBPINOBJ unsetNodeName\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
.RS -4n
\fBRawFile\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
configure
Configure properties\&.
.TP
getCurrentsNames
Returns list that contains names of all current variables\&.
.TP
getTrace
Returns Trace object reference by it's name\&.
.TP
getTracesCsv
Returns string with csv formatting containing all data\&.
.TP
getTracesData
Returns dictionary that contains all data in value and name as a key\&.
.TP
getTracesStr
Returns information about all Traces in raw file in form of string\&.
.TP
getVariablesNames
Returns list that contains names of all variables\&.
.TP
getVoltagesNames
Returns list that contains names of all voltage variables\&.
.TP
measure
Not documented\&.
.TP
readComplex
See \fIBinaryReader\&.readComplex\fP
.TP
readFloat32
See \fIBinaryReader\&.readFloat32\fP
.TP
readFloat64
See \fIBinaryReader\&.readFloat64\fP
.TP
skip4bytes
See \fIBinaryReader\&.skip4bytes\fP
.TP
skip8bytes
See \fIBinaryReader\&.skip8bytes\fP
.TP
skip16bytes
See \fIBinaryReader\&.skip16bytes\fP
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-axis
Readable, writable\&.
.TP
-npoints
Readable, writable\&.
.TP
-nvariables
Readable, writable\&.
.TP
-path
Readable, writable\&.
.TP
-rawparams
Readable, writable\&.
.RE
.PP
\fBMixins\fR
.PP
\fIBinaryReader\fP, \fIUtility\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Creates RawFile object\&.
.RS 4n
\fBRawFile create OBJNAME\fP \fI?args?\fP
.br
\fBRawFile new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
path
Path to raw file including it's file name\&.
.TP
simulator
Simulator that produced this raw file, default is ngspice
.TP
traces2read
List of traces that will be readed, default value is *, that means reading all traces\&.
.RE
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Destroy object of class RawFile, and its traces objects\&.
.RS 4n
\fBRAWFILEOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBgetCurrentsNames\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Returns list that contains names of all current variables
.RS 4n
\fBRAWFILEOBJ getCurrentsNames\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
Returns list that contains names of all current variables
.PP
.RS -4n
\fBgetTrace\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Returns Trace object reference by it's name
.RS 4n
\fBRAWFILEOBJ getTrace\fP \fItraceName\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
traceName
Not documented\&.
.RE
.PP
\fBReturn value\fR
.PP
Returns Trace object reference by it's name
.PP
.RS -4n
\fBgetTracesCsv\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Returns string with csv formatting containing all data
.RS 4n
\fBOBJECT getTracesCsv\fP \fI?-all? ?-traces list? ?-sep value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-all
Select all traces, optional\&.
.TP
-sep
Separator of columns, default is comma, optional\&.
.TP
-traces
Select names of traces to return, optional\&.
.RE
.PP
\fBReturn value\fR
.PP
Returns string with csv formatting containing all data
.PP
.RS -4n
\fBgetTracesData\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Returns dictionary that contains all data in value and name as a key
.RS 4n
\fBRAWFILEOBJ getTracesData\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
Returns dictionary that contains all data in value and name as a key
.PP
.RS -4n
\fBgetTracesStr\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Returns information about all Traces in raw file in form of string
.RS 4n
\fBRAWFILEOBJ getTracesStr\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
Returns information about all Traces in raw file in form of string
.PP
.RS -4n
\fBgetVariablesNames\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Returns list that contains names of all variables
.RS 4n
\fBRAWFILEOBJ getVariablesNames\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
Returns list that contains names of all variables
.PP
.RS -4n
\fBgetVoltagesNames\fR (::SpiceGenTcl::RawFile)
.RE
.PP
Returns list that contains names of all voltage variables
.RS 4n
\fBRAWFILEOBJ getVoltagesNames\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
Returns list that contains names of all voltage variables
.PP
.RS -4n
\fBmeasure\fR (::SpiceGenTcl::RawFile)
.RE
.RS 4n
\fBRAWFILEOBJ measure\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
.RS -4n
\fBRawString\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates raw string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBSubclasses\fR
.PP
\fIComment\fP, \fIInclude\fP, \fILibrary\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::RawString)
.RE
.PP
Creates object of class RawString\&.
.RS 4n
\fBOBJECT constructor\fP \fIvalue ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the string that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
value
Value of the raw string\&.
.RE
.PP
\fBDescription\fR
.PP
Class represent arbitary string\&.  It can be used to pass any string directly into netlist, for example, it
can add elements that doesn't have dedicated class\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::RawString)
.RE
.PP
Creates raw string for SPICE netlist\&.
.RS 4n
\fBRAWSTRINGOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlists string
.PP
.RS -4n
\fBSave\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
addVector
Adds new ParameterVector object to the dictionary Vectors\&.
.TP
configure
Configure properties\&.
.TP
deleteVector
Deletes existing ParameterVector object from dictionary Vectors\&.
.TP
genSPICEString
Creates \&.save statement string for SPICE netlist\&.
.TP
getVectors
Gets the dictionary of ParameterVectors\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
\fBMixins\fR
.PP
\fIUtility\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Save)
.RE
.PP
Creates object of class ParamStatement\&.
.RS 4n
\fBOBJECT constructor\fP \fIvectors ?-name value?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-name value
Name of the library that could be used to retrieve element from \fI::SpiceGenTcl::Netlist\fP object and its descendants, optional\&.
.TP
vectors
List of vectors in form {vec0 vec1 vec2 \&.\&.\&.}
.RE
.PP
\fBDescription\fR
.PP
Class represent \&.save statement\&.
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::Save)
.RE
.PP
Destroy object of class Save, and its ParameterVectors objects\&.
.RS 4n
\fBSAVEOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBaddVector\fR (::SpiceGenTcl::Save)
.RE
.PP
Adds new ParameterVector object to the dictionary Vectors\&.
.RS 4n
\fBSAVEOBJ addVector\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
vname
Name of vector\&.
.RE
.PP
.RS -4n
\fBdeleteVector\fR (::SpiceGenTcl::Save)
.RE
.PP
Deletes existing ParameterVector object from dictionary Vectors\&.
.RS 4n
\fBSAVEOBJ deleteVector\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
vname
Name of parameter that will be deleted\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Save)
.RE
.PP
Creates \&.save statement string for SPICE netlist\&.
.RS 4n
\fBSAVEOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBgetVectors\fR (::SpiceGenTcl::Save)
.RE
.PP
Gets the dictionary of ParameterVectors
.RS 4n
\fBSAVEOBJ getVectors\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.RE
.PP
\fBReturn value\fR
.PP
vectors dictionary
.PP
.RS -4n
\fBSimulator\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
configure
Configure properties\&.
.TP
getLog
Returns log file of completed simulations\&.
.TP
readData
Reads raw data file of last simulation\&.
.TP
readLog
Reads log file of completed simulations\&.
.TP
run
Runs simulation\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-data
Readable, writable\&.
.TP
-log
Readable, writable\&.
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSubclasses\fR
.PP
\fI::SpiceGenTcl::Ngspice::Simulators::Batch\fP, \fI::SpiceGenTcl::Xyce::Simulators::Batch\fP, \fI::SpiceGenTcl::Ltspice::Simulators::Batch\fP
.PP
.RS -4n
\fBgetLog\fR (::SpiceGenTcl::Simulator)
.RE
.PP
Returns log file of completed simulations\&.
.RS 4n
\fBSIMULATOROBJ getLog\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
Returns log file of completed simulations\&.
.PP
.RS -4n
\fBreadData\fR (::SpiceGenTcl::Simulator)
.RE
.PP
Reads raw data file of last simulation\&.
.RS 4n
\fBSIMULATOROBJ readData\fP
.br
.RE
.PP
.RS -4n
\fBreadLog\fR (::SpiceGenTcl::Simulator)
.RE
.PP
Reads log file of completed simulations\&.
.RS 4n
\fBSIMULATOROBJ readLog\fP
.br
.RE
.PP
.RS -4n
\fBrun\fR (::SpiceGenTcl::Simulator)
.RE
.PP
Runs simulation\&.
.RS 4n
\fBSIMULATOROBJ run\fP
.br
.RE
.PP
.RS -4n
\fBSPICEElement\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
configure
Configure properties\&.
.TP
genSPICEString
Declaration of method common for all SPICE elements that generates representation of element in SPICE netlist\&. Not implemented in abstraction class\&.
.RE
.PP
\fBSubclasses\fR
.PP
\fIPin\fP, \fIParameterSwitch\fP, \fIDevice\fP, \fIModel\fP, \fIRawString\fP, \fIFunction\fP, \fIOptions\fP, \fIParamStatement\fP, \fISave\fP, \fIIc\fP, \fIGlobal\fP, \fITemp\fP, \fINetlist\fP, \fIAnalysis\fP
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::SPICEElement)
.RE
.PP
Declaration of method common for all SPICE elements that generates
representation of element in SPICE netlist\&. Not implemented in
abstraction class\&.
.RS 4n
\fBSPICEELEMENTOBJ genSPICEString\fP
.br
.RE
.PP
.RS -4n
\fBSubcircuit\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
destructor
Destructor for the class\&.
.TP
actOnParam
Acts on Parameter object with selected action\&.
.TP
actOnPin
Acts on Pin object with selected action\&.
.TP
add
Add elements objects references to Subcircuit, it extends add method to add check of element class because Subcircuit can't contain particular elements inside, like \fI::SpiceGenTcl::Include\fP, \fI::SpiceGenTcl::Library\fP, \fI::SpiceGenTcl::Options\fP and \fI::SpiceGenTcl::Analysis\fP\&.
.TP
configure
Configure properties\&.
.TP
del
See \fINetlist\&.del\fP
.TP
genSPICEString
Creates subcircuit string for SPICE subcircuit\&.
.TP
getAllElemNames
See \fINetlist\&.getAllElemNames\fP
.TP
getElement
See \fINetlist\&.getElement\fP
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fINetlist\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Subcircuit)
.RE
.PP
Creates object of class Subcircuit\&.
.RS 4n
\fBSubcircuit create OBJNAME\fP \fI?args?\fP
.br
\fBSubcircuit new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
name
Name of the subcircuit\&.
.TP
params
List of input parameters in form {{name value} {name value} {name value} \&.\&.\&.}
.TP
pins
List of pins in the order they appear in SPICE subcircuits definition together in form: {pinName0 pinName1 pinName2 \&.\&.\&.}
.RE
.PP
\fBDescription\fR
.PP
This class implements subcircuit, it is subclass of Netlist because it holds list of elements
inside subcircuit, together with header and connection of elements inside\&.
.PP
.RS -4n
\fBdestructor\fR (::SpiceGenTcl::Subcircuit)
.RE
.PP
Destroy object of class Subcircuit, and its Parameters and Pins objects\&.
.RS 4n
\fBSUBCIRCUITOBJ destroy\fP
.br
.RE
.PP
.RS -4n
\fBactOnParam\fR (::SpiceGenTcl::Subcircuit)
.RE
.PP
Acts on Parameter object with selected action
.RS 4n
\fBOBJECT actOnParam\fP \fI-add ?-pos|eq|poseq|posnocheck|nocheck|sw|node|nodeeq? name value\fP
.br
\fBOBJECT actOnParam\fP \fI-set name value ?name value \&.\&.\&.?\fP
.br
\fBOBJECT actOnParam\fP \fI-get name\fP
.br
\fBOBJECT actOnParam\fP \fI-get -all\fP
.br
\fBOBJECT actOnParam\fP \fI-delete name\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new parameter to the device, requires pname argument\&.
.TP
-all
Option for getting the dictionary that contains parameters names as keys and parameters values #    as the dictionary values, requires -get
.TP
-delete
Delete existing parameter\&.
.TP
-eq
Parameter may contain equation in terms of functions and other parameters, printed as $name={$equation}, requires -add
.TP
-get
Get parameter value, requires pname argument\&.
.TP
-nocheck
Normal parameter without check, requires -add
.TP
-node
Node parameter, requires -add
.TP
-nodeeq
Node parameter equation, requires -add
.TP
-pos
Parameter has strict position and only $value is displayed in netlist, requires -add
.TP
-poseq
Combination of both flags, print only, requires -add
.TP
-posnocheck
Positional parameter without check, requires -add
.TP
-set
Set (or change) value of particular parameters, requires pname and value arguments\&.
.TP
-sw
Switch parameter, requires -add
.TP
arguments
Optional pairs of name-value for -set action, requires -set
.TP
pname
Name of parameter\&.
.TP
value
Value of parameter\&.
.RE
.PP
.RS -4n
\fBactOnPin\fR (::SpiceGenTcl::Subcircuit)
.RE
.PP
Acts on Pin object with selected action
.RS 4n
\fBOBJECT actOnPin\fP \fI-add pin node\fP
.br
\fBOBJECT actOnPin\fP \fI-set pin node\fP
.br
\fBOBJECT actOnPin\fP \fI-get pin\fP
.br
\fBOBJECT actOnPin\fP \fI-get -all\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-add
Add new pin to the device, requires pin and node arguments\&.
.TP
-all
Option for getting the dictionary that contains pin name as keys and connected node name as the values, requires -get
.TP
-get
Get node name connected to pin, requires pin argument\&.
.TP
-set
Set node name connected to pin, requires pin and node arguments\&.
.TP
node
Name of the node connected to pin\&.
.TP
pin
Name of the pin\&.
.RE
.PP
.RS -4n
\fBadd\fR (::SpiceGenTcl::Subcircuit)
.RE
.PP
Add elements objects references to Subcircuit, it extends add method to add check of element class
because Subcircuit can't contain particular elements inside, like \fI::SpiceGenTcl::Include\fP,
\fI::SpiceGenTcl::Library\fP, \fI::SpiceGenTcl::Options\fP and \fI::SpiceGenTcl::Analysis\fP\&.
.RS 4n
\fBSUBCIRCUITOBJ add\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
args
Elements objects references\&.
.RE
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Subcircuit)
.RE
.PP
Creates subcircuit string for SPICE subcircuit\&.
.RS 4n
\fBSUBCIRCUITOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBTemp\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
configure
Configure properties\&.
.TP
genSPICEString
Creates \&.temp statement string for SPICE netlist\&.
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-name
Readable, writable\&.
.TP
-value
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fISPICEElement\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Temp)
.RE
.PP
Creates object of class Temp\&.
.RS 4n
\fBOBJECT constructor\fP \fIvalue ?-eq?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
-eq
Optional parameter qualificator\&.
.TP
value
Value of the temperature\&.
.RE
.PP
\fBDescription\fR
.PP
This class represent \&.temp statement with temperature value\&.
.PP
.RS -4n
\fBgenSPICEString\fR (::SpiceGenTcl::Temp)
.RE
.PP
Creates \&.temp statement string for SPICE netlist\&.
.RS 4n
\fBTEMPOBJ genSPICEString\fP
.br
.RE
.PP
\fBReturn value\fR
.PP
SPICE netlist's string
.PP
.RS -4n
\fBTrace\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.TP
constructor
Constructor for the class\&.
.TP
appendDataPoints
See \fIDataset\&.appendDataPoints\fP
.TP
configure
Configure properties\&.
.TP
getDataPoints
See \fIDataset\&.getDataPoints\fP
.TP
getStr
See \fIDataset\&.getStr\fP
.TP
setDataPoints
See \fIDataset\&.setDataPoints\fP
.RE
.PP
\fBProperties\fR
.RS 4n
.TP
-axis
Readable, writable\&.
.TP
-len
Readable, writable\&.
.TP
-name
Readable, writable\&.
.TP
-numtype
Readable, writable\&.
.TP
-type
Readable, writable\&.
.RE
.PP
\fBSuperclasses\fR
.PP
\fIDataset\fP
.PP
.RS -4n
\fBconstructor\fR (::SpiceGenTcl::Trace)
.RE
.PP
Initializes Trace object\&.
.RS 4n
\fBTrace create OBJNAME\fP \fI?args?\fP
.br
\fBTrace new\fP \fI?args?\fP
.br
.RE
.PP
\fBParameters\fR
.RS 4n
.TP
axis
Name of axis that is linked to trace\&.
.TP
len
Total number of points\&.
.TP
name
Name of the trace\&.
.TP
numtype
Numerical type of trace\&.
.TP
type
Type of trace\&.
.RE
.PP
.RS -4n
\fBUtility\fR (::SpiceGenTcl)
.RE
.PP
\fBMethod summary\fR
.RS 4n
.RE
.PP
\fBSubclasses\fR
.PP
\fIDevice\fP, \fIModel\fP, \fIOptions\fP, \fIParamStatement\fP, \fISave\fP, \fIIc\fP, \fINodeset\fP, \fIGlobal\fP, \fINetlist\fP, \fIAnalysis\fP, \fIRawFile\fP, \fI::SpiceGenTcl::Common::Sources::pulse\fP, \fI::SpiceGenTcl::Common::Sources::sin\fP, \fI::SpiceGenTcl::Common::Sources::exp\fP, \fI::SpiceGenTcl::Common::Sources::sffm\fP, \fI::SpiceGenTcl::Common::Analyses::Dc\fP, \fI::SpiceGenTcl::Common::Analyses::Ac\fP, \fI::SpiceGenTcl::Common::Analyses::Tran\fP, \fI::SpiceGenTcl::Common::Analyses::Op\fP, \fI::SpiceGenTcl::Ngspice::Sources::pulse\fP, \fI::SpiceGenTcl::Ngspice::Sources::sffm\fP, \fI::SpiceGenTcl::Ngspice::Sources::am\fP, \fI::SpiceGenTcl::Ngspice::Analyses::Sp\fP, \fI::SpiceGenTcl::Ngspice::Analyses::SensAc\fP, \fI::SpiceGenTcl::Ngspice::Analyses::SensDc\fP, \fI::SpiceGenTcl::Ngspice::Misc::OptionsNgspice\fP, \fI::SpiceGenTcl::Xyce::Analyses::Sens\fP, \fI::SpiceGenTcl::Ltspice::Sources::pulse\fP, \fI::SpiceGenTcl::Ltspice::Sources::sin\fP, \fI::SpiceGenTcl::Ltspice::Sources::exp\fP, \fI::SpiceGenTcl::Ltspice::Sources::sffm\fP

